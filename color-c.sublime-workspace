{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"preview",
				"preview_events"
			],
			[
				"events",
				"preview_events"
			],
			[
				"prev",
				"preview_events"
			],
			[
				"valid",
				"valid_ids"
			],
			[
				"Token",
				"TokenMatchesString"
			],
			[
				"max",
				"max_bytes"
			],
			[
				"Draw",
				"DrawFilledRect"
			],
			[
				"graph",
				"graph_rect"
			],
			[
				"avg",
				"frametime_avg"
			],
			[
				"high",
				"highlight_max"
			],
			[
				"frametime_max",
				"frametime_max_text"
			],
			[
				"Rect",
				"RectTopRight"
			],
			[
				"Table",
				"TableDrawMode"
			],
			[
				"TableDraw",
				"TableDrawState"
			],
			[
				"padded",
				"padded_button_height"
			],
			[
				"row",
				"cur_row_count"
			],
			[
				"active",
				"active_container"
			],
			[
				"SetCam",
				"SetCameraView"
			],
			[
				"align",
				"aligned_button_rect"
			],
			[
				"fram",
				"frametime_graph_state"
			],
			[
				"framet",
				"frametimes"
			],
			[
				"frametime",
				"frametime_graph_state"
			],
			[
				"Frametim",
				"FrametimeGraphState"
			],
			[
				"frma",
				"frametime_count"
			],
			[
				"siz_",
				"size_in_bytes"
			],
			[
				"frame",
				"frame_times_ms"
			],
			[
				"number",
				"number_of_frame_times"
			],
			[
				"Alloc",
				"AllocateMemory"
			],
			[
				"entry_",
				"entry_cell_size"
			],
			[
				"entri",
				"entries_per_dimension"
			],
			[
				"en",
				"entries_per_dimension"
			],
			[
				"unit_slot",
				"unit_slot_padding"
			],
			[
				"enemy",
				"enemy_units"
			],
			[
				"random",
				"random_unit"
			],
			[
				"Name",
				"CreateUnitByName"
			],
			[
				"Campaign",
				"CampaignState"
			],
			[
				"Crate",
				"CreateUnitByName"
			],
			[
				"Mouse",
				"MouseFocusTaken"
			],
			[
				"draggin",
				"dragging_index"
			],
			[
				"cure",
				"current_index"
			],
			[
				"window",
				"window_rects"
			],
			[
				"debug",
				"debug_overlay"
			],
			[
				"button",
				"button_layout"
			],
			[
				"OverL",
				"OverlayOption_strings"
			],
			[
				"thread",
				"thread_arena_id"
			],
			[
				"thread_are",
				"thread_arena_id"
			],
			[
				"exit",
				"exit_requested"
			],
			[
				"deleted",
				"deleted_entry"
			],
			[
				"mBind",
				"mBindPlatformFunction"
			],
			[
				"arne",
				"arena_table_mutex"
			],
			[
				"arean",
				"arena_table_mutex"
			],
			[
				"arena_table",
				"arena_table_mutex"
			],
			[
				"Relese",
				"ReleaseMutex"
			],
			[
				"threadare",
				"thread_arena_debug_name"
			],
			[
				"scratc",
				"scratch_arena"
			],
			[
				"scrac",
				"scratch_arena"
			],
			[
				"scrat",
				"scratch_arena"
			],
			[
				"per_Fra",
				"per_frame_arena_id"
			],
			[
				"arena",
				"arena_count"
			],
			[
				"prepass",
				"prepass_framebuffer"
			],
			[
				"prepas",
				"prepass_framebuffer"
			],
			[
				"text",
				"texture_id"
			],
			[
				"blur",
				"blur_shader"
			],
			[
				"d_",
				"d_color_y"
			],
			[
				"outline",
				"outline_shader"
			],
			[
				"Gener",
				"GenerateComputeShaderFromFile"
			],
			[
				"GLTEXT",
				"GL_TEXTURE0"
			],
			[
				"Lo",
				"LogGlError"
			],
			[
				"dst",
				"dst_coords"
			],
			[
				"Bind",
				"BindTexture"
			],
			[
				"GLTE",
				"GL_TEXTURE1"
			],
			[
				"GL_TEXTU",
				"GL_TEXTURE0"
			],
			[
				"blurd",
				"blur_dst_texture"
			],
			[
				"Pro",
				"ProgramUniform1i"
			],
			[
				"blur_",
				"blur_data"
			],
			[
				"GL_TE",
				"GL_TEXTURE_2D"
			],
			[
				"prepasS_",
				"prepass_texture"
			],
			[
				"GL_TEXT",
				"GL_TEXTURE0"
			],
			[
				"GL_TEXTUR",
				"GL_TEXTURE_2D"
			],
			[
				"texco",
				"texcoords_attr"
			],
			[
				"guas",
				"gaussian_blur_shader"
			],
			[
				"trait_chang",
				"trait_change_text_layout"
			],
			[
				"trait_change",
				"trait_change_string"
			],
			[
				"utf32",
				"utf32_char"
			],
			[
				"Next",
				"NextAsUtf32Char"
			],
			[
				"traitchange",
				"trait_change_text_layout"
			],
			[
				"trait_chan",
				"trait_change_string"
			],
			[
				"FromAre",
				"AllocStringDataFromArena"
			],
			[
				"ability_icon",
				"ability_icon_button_layout"
			],
			[
				"aligned",
				"aligned_child"
			],
			[
				"abilityicon",
				"ability_icon_button_layout"
			],
			[
				"Aci",
				"ActivateColorShader"
			],
			[
				"Active",
				"ActivateColorShader"
			],
			[
				"current",
				"current_state"
			],
			[
				"cur_pot",
				"cur_potential"
			],
			[
				"best_",
				"best_score"
			],
			[
				"pote",
				"ability_potential"
			],
			[
				"abs",
				"abs_change"
			],
			[
				"rel",
				"rel_change"
			],
			[
				"best",
				"best_score"
			],
			[
				"abilit_",
				"ability_id"
			],
			[
				"tier_pote",
				"tier_potentials"
			],
			[
				"next_",
				"next_tier_index"
			],
			[
				"requir",
				"required_traits"
			],
			[
				"cur_tier",
				"cur_tier_reqs"
			],
			[
				"cur_",
				"cur_tier_index"
			],
			[
				"armor",
				"armor_score"
			],
			[
				"focus",
				"focus_score"
			],
			[
				"aro",
				"armor_range"
			],
			[
				"upgrade",
				"upgrade_potential"
			],
			[
				"down",
				"downgrade_points"
			],
			[
				"prev_",
				"prev_tier_potential"
			],
			[
				"upgade",
				"upgrade_ratio"
			],
			[
				"total",
				"total_points"
			],
			[
				"next",
				"next_tier"
			],
			[
				"upgrad",
				"upgrade_points"
			],
			[
				"cur_pote",
				"cur_tier_potential"
			],
			[
				"cur",
				"cur_tier_potential"
			],
			[
				"ability",
				"ability_count"
			],
			[
				"potent",
				"potential_before_change"
			],
			[
				"potential_e",
				"potential_after_change"
			],
			[
				"ally_",
				"ally_units"
			],
			[
				"ally_trait",
				"ally_traitset_changes"
			],
			[
				"Valid",
				"ValidAbility"
			],
			[
				"init",
				"initial_enemy_traitsets"
			],
			[
				"breed",
				"breed_table"
			],
			[
				"initia",
				"initial_ally_traitsets"
			],
			[
				"enemytraitset",
				"enemy_traitset_changes"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/table.h",
			"settings":
			{
				"buffer_size": 1918,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/array.h",
			"settings":
			{
				"buffer_size": 2444,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/battle.h",
			"settings":
			{
				"buffer_size": 1810,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/battle.cpp",
			"settings":
			{
				"buffer_size": 56134,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/memory.cpp",
			"settings":
			{
				"buffer_size": 4815,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/memory.h",
			"settings":
			{
				"buffer_size": 1002,
				"line_ending": "Windows"
			}
		},
		{
			"file": "logs/log.txt",
			"settings":
			{
				"buffer_size": 8836308,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 148 files for \"MetaString\"\n\nC:\\color-c\\src\\array.h:\n   18  \n   19  template<typename Type>\n   20: String MetaString(const Array<Type> *s)\n   21  {\n   22      String string = {};\n   ..\n   31      {\n   32          if(!first) AppendCString(&string, \", \");\n   33:         AppendCString(&string, \"%s\", MetaString(&(s->data[i])));\n   34      }\n   35      //AppendCString(&string, \"  count: %d (int)\\n\", s->count);\n\nC:\\color-c\\src\\battle.cpp:\n  809                      if(ValidUnit(unit)) hovered_unit_id = unit_id;\n  810  \n  811:                     //DrawTextMultiline(c::small_text_layout, MousePos(), MetaString(unit));\n  812  \n  813                      break;\n  ...\n 1358      if(!any_ally_is_alive or !any_enemy_is_alive) battle_state.finished = true;\n 1359  \n 1360:     DrawTextMultiline(c::def_text_layout, MousePos(true), MetaString(&battle->preview_events));\n 1361  \n 1362      return battle_state;\n\nC:\\color-c\\src\\editor.cpp:\n  175  \t\t\tGenerateInputElementString(&editor->input_elements[(int)AbilityPropertyIndex::tier2required_armor], &editor->temp_ability.tiers[2].required_traits.armor);\n  176  \n  177: \t//\t\t\tDrawTextMultiline(c::def_text_layout, MousePos(), MetaString(&editor->temp_ability.tiers[0]));\n  178  \t\t}\n  179  \t}\n\nC:\\color-c\\src\\game.cpp:\n  427  \n  428      // SetDrawDepth(1.f);\n  429:     // DrawTextMultiline(c::small_text_layout, MousePos(), MetaString(&game->pointer_cursor));\n  430  \n  431      // Utf32String foo = {};\n\nC:\\color-c\\src\\meta.cpp:\n   12  * members that are aggregate-initialized (with {})\n   13  * show all members of an array instead of just the address of it\n   14: * parse enum classes so that their MetaString prints the actual enum name (not the integer).\n   15  \n   16  PARTIAL\n   17: * Templated members (templated members are implemented, but templating the MetaString() function isn't, so it's only partially complete)\n   18  \n   19  FINISHED, but maybe not robust:\n   ..\n  613  \n  614                      // Output declaration to H file\n  615:                     fprintf(&header_file, \"String MetaString(const %.*s *s);\\n\\n\",\n  616                              int(enum_class_name_token.length), enum_class_name_token.start);\n  617  \n  618                      // Output beginning of definition to CPP file.\n  619:                     fprintf(&out_file, \"\\nString MetaString(const %.*s *s)\\n\",\n  620                              int(enum_class_name_token.length), enum_class_name_token.start);\n  621                      fprintf(&out_file, \"{\\n\");\n  ...\n  684                      {\n  685                          // This template corresponds to a templated struct, so we want\n  686:                         // to template the MetaString function to match it.\n  687                          file.p = thing_being_templated.start;\n  688                          token = NextToken(&file);\n  ...\n  735  \n  736                      // Output declaration to H file\n  737:                     fprintf(&header_file, \"String MetaString(const %.*s%s *s);\\n\\n\",\n  738                              int(struct_name_token.length), struct_name_token.start,\n  739                              template_type_string);\n  ...\n  742                      if(!no_implementation)\n  743                      {\n  744:                         fprintf(&out_file, \"String MetaString(const %.*s%s *s)\\n\",\n  745                                  int(struct_name_token.length), struct_name_token.start,\n  746                                  template_type_string);\n  ...\n  928                                  }\n  929                                  else\n  930:                                 { // Append the member as a string from a recursive MetaString() call, unless it's a pointer.\n  931                                      if(is_pointer)\n  932                                      {\n  ...\n  942                                          fprintf(&out_file, \"\\tAppendCString(&string, \\\"  %.*s: \\\");\\n\",\n  943                                                  (int)member_name.length, member_name.start);\n  944:                                         fprintf(&out_file, \"\\tAppendString(&string, MetaString(&s->%.*s));\\n\",\n  945                                                  (int)member_name.length, member_name.start);\n  946                                          fprintf(&out_file, \"\\tAppendCString(&string, \\\"(%s%.*s%s)\\\\n\\\");\\n\\n\",\n\nC:\\color-c\\src\\meta_print.cpp:\n   75  // ------------------------------------------\n   76  \n   77: String MetaString(const AbilityTier *s)\n   78  {\n   79  \tTIMED_BLOCK;\n   ..\n   87  \n   88  \tAppendCString(&string, \"  required_traits: \");\n   89: \tAppendString(&string, MetaString(&s->required_traits));\n   90  \tAppendCString(&string, \"(TraitSet)\\n\");\n   91  \n   92  \tAppendCString(&string, \"  target_class: \");\n   93: \tAppendString(&string, MetaString(&s->target_class));\n   94  \tAppendCString(&string, \"(TargetClass)\\n\");\n   95  \n   96  \tAppendCString(&string, \"  effects_: \");\n   97: \tAppendString(&string, MetaString(&s->effects_));\n   98  \tAppendCString(&string, \"(Array<Effect>)\\n\");\n   99  \n  ...\n  103  }\n  104  \n  105: String MetaString(const Ability *s)\n  106  {\n  107  \tTIMED_BLOCK;\n  ...\n  117  \n  118  \tAppendCString(&string, \"  name: \");\n  119: \tAppendString(&string, MetaString(&s->name));\n  120  \tAppendCString(&string, \"(String)\\n\");\n  121  \n  122  \tAppendCString(&string, \"  tiers: \");\n  123: \tAppendString(&string, MetaString(&s->tiers));\n  124  \tAppendCString(&string, \"(Array<AbilityTier>)\\n\");\n  125  \n  126  \tAppendCString(&string, \"  tier_potentials: \");\n  127: \tAppendString(&string, MetaString(&s->tier_potentials));\n  128  \tAppendCString(&string, \"(Array<float>)\\n\");\n  129  \n  ...\n  137  // ------------------------------------------\n  138  \n  139: String MetaString(const AiExplorer *s)\n  140  {\n  141  \tTIMED_BLOCK;\n  ...\n  157  // ------------------------------------------\n  158  \n  159: String MetaString(const AlignX *s)\n  160  {\n  161  \tTIMED_BLOCK;\n  ...\n  186  }\n  187  \n  188: String MetaString(const AlignY *s)\n  189  {\n  190  \tTIMED_BLOCK;\n  ...\n  215  }\n  216  \n  217: String MetaString(const Align *s)\n  218  {\n  219  \tTIMED_BLOCK;\n  ...\n  227  \n  228  \tAppendCString(&string, \"  x: \");\n  229: \tAppendString(&string, MetaString(&s->x));\n  230  \tAppendCString(&string, \"(AlignX)\\n\");\n  231  \n  232  \tAppendCString(&string, \"  y: \");\n  233: \tAppendString(&string, MetaString(&s->y));\n  234  \tAppendCString(&string, \"(AlignY)\\n\");\n  235  \n  ...\n  248  // ------------------------------------------\n  249  \n  250: String MetaString(const Intent *s)\n  251  {\n  252  \tTIMED_BLOCK;\n  ...\n  260  \n  261  \tAppendCString(&string, \"  caster_id: \");\n  262: \tAppendString(&string, MetaString(&s->caster_id));\n  263  \tAppendCString(&string, \"(Id<Unit>)\\n\");\n  264  \n  265  \tAppendCString(&string, \"  ability_id: \");\n  266: \tAppendString(&string, MetaString(&s->ability_id));\n  267  \tAppendCString(&string, \"(Id<Ability>)\\n\");\n  268  \n  269  \tAppendCString(&string, \"  target_set: \");\n  270: \tAppendString(&string, MetaString(&s->target_set));\n  271  \tAppendCString(&string, \"(UnitSet)\\n\");\n  272  \n  ...\n  276  }\n  277  \n  278: String MetaString(const BattleEvent *s)\n  279  {\n  280  \tTIMED_BLOCK;\n  ...\n  288  \n  289  \tAppendCString(&string, \"  caster_id: \");\n  290: \tAppendString(&string, MetaString(&s->caster_id));\n  291  \tAppendCString(&string, \"(Id<Unit>)\\n\");\n  292  \n  293  \tAppendCString(&string, \"  target_id: \");\n  294: \tAppendString(&string, MetaString(&s->target_id));\n  295  \tAppendCString(&string, \"(Id<Unit>)\\n\");\n  296  \n  297  \tAppendCString(&string, \"  trait_changes: \");\n  298: \tAppendString(&string, MetaString(&s->trait_changes));\n  299  \tAppendCString(&string, \"(TraitSet)\\n\");\n  300  \n  ...\n  304  }\n  305  \n  306: String MetaString(const BattleState *s)\n  307  {\n  308  \tTIMED_BLOCK;\n  ...\n  322  }\n  323  \n  324: String MetaString(const Battle *s)\n  325  {\n  326  \tTIMED_BLOCK;\n  ...\n  334  \n  335  \tAppendCString(&string, \"  arena_id: \");\n  336: \tAppendString(&string, MetaString(&s->arena_id));\n  337  \tAppendCString(&string, \"(PoolId<Arena>)\\n\");\n  338  \n  339  \tAppendCString(&string, \"  hud: \");\n  340: \tAppendString(&string, MetaString(&s->hud));\n  341  \tAppendCString(&string, \"(Rect)\\n\");\n  342  \n  343  \tAppendCString(&string, \"  selected_unit_id: \");\n  344: \tAppendString(&string, MetaString(&s->selected_unit_id));\n  345  \tAppendCString(&string, \"(Id<Unit>)\\n\");\n  346  \n  347  \tAppendCString(&string, \"  selected_ability_id: \");\n  348: \tAppendString(&string, MetaString(&s->selected_ability_id));\n  349  \tAppendCString(&string, \"(Id<Ability>)\\n\");\n  350  \n  351  \tAppendCString(&string, \"  units: \");\n  352: \tAppendString(&string, MetaString(&s->units));\n  353  \tAppendCString(&string, \"(UnitSet)\\n\");\n  354  \n  ...\n  356  \n  357  \tAppendCString(&string, \"  intents: \");\n  358: \tAppendString(&string, MetaString(&s->intents));\n  359  \tAppendCString(&string, \"(Array<Intent>)\\n\");\n  360  \n  361  \tAppendCString(&string, \"  player_intent: \");\n  362: \tAppendString(&string, MetaString(&s->player_intent));\n  363  \tAppendCString(&string, \"(Intent)\\n\");\n  364  \n  ...\n  366  \n  367  \tAppendCString(&string, \"  preview_events: \");\n  368: \tAppendString(&string, MetaString(&s->preview_events));\n  369  \tAppendCString(&string, \"(Array<BattleEvent>)\\n\");\n  370  \n  ...\n  372  \n  373  \tAppendCString(&string, \"  preview_damage_timer: \");\n  374: \tAppendString(&string, MetaString(&s->preview_damage_timer));\n  375  \tAppendCString(&string, \"(OscillatingTimer)\\n\");\n  376  \n  377  \tAppendCString(&string, \"  end_button_clicked_timer: \");\n  378: \tAppendString(&string, MetaString(&s->end_button_clicked_timer));\n  379  \tAppendCString(&string, \"(Timer)\\n\");\n  380  \n  ...\n  382  \n  383  \tAppendCString(&string, \"  best_choice_string: \");\n  384: \tAppendString(&string, MetaString(&s->best_choice_string));\n  385  \tAppendCString(&string, \"(String)\\n\");\n  386  \n  ...\n  398  // ------------------------------------------\n  399  \n  400: String MetaString(const BgraPixel *s)\n  401  {\n  402  \tTIMED_BLOCK;\n  ...\n  422  }\n  423  \n  424: String MetaString(const Bitmap *s)\n  425  {\n  426  \tTIMED_BLOCK;\n  ...\n  448  // ------------------------------------------\n  449  \n  450: String MetaString(const Buffer *s)\n  451  {\n  452  \tTIMED_BLOCK;\n  ...\n  474  // ------------------------------------------\n  475  \n  476: String MetaString(const Camera *s)\n  477  {\n  478  \tTIMED_BLOCK;\n  ...\n  486  \n  487  \tAppendCString(&string, \"  pos: \");\n  488: \tAppendString(&string, MetaString(&s->pos));\n  489  \tAppendCString(&string, \"(Vec2f)\\n\");\n  490  \n  491  \tAppendCString(&string, \"  view: \");\n  492: \tAppendString(&string, MetaString(&s->view));\n  493  \tAppendCString(&string, \"(Vec2f)\\n\");\n  494  \n  ...\n  502  // ------------------------------------------\n  503  \n  504: String MetaString(const CampaignState *s)\n  505  {\n  506  \tTIMED_BLOCK;\n  ...\n  537  }\n  538  \n  539: String MetaString(const Campaign *s)\n  540  {\n  541  \tTIMED_BLOCK;\n  ...\n  549  \n  550  \tAppendCString(&string, \"  state: \");\n  551: \tAppendString(&string, MetaString(&s->state));\n  552  \tAppendCString(&string, \"(CampaignState)\\n\");\n  553  \n  554  \tAppendCString(&string, \"  arena_id: \");\n  555: \tAppendString(&string, MetaString(&s->arena_id));\n  556  \tAppendCString(&string, \"(PoolId<Arena>)\\n\");\n  557  \n  558  \tAppendCString(&string, \"  battle_arena_id: \");\n  559: \tAppendString(&string, MetaString(&s->battle_arena_id));\n  560  \tAppendCString(&string, \"(PoolId<Arena>)\\n\");\n  561  \n  ...\n  571  \n  572  \tAppendCString(&string, \"  generation_params_template: \");\n  573: \tAppendString(&string, MetaString(&s->generation_params_template));\n  574  \tAppendCString(&string, \"(GenerateNodeGraph_Params)\\n\");\n  575  \n  ...\n  577  \n  578  \tAppendCString(&string, \"  map_zoom_timer: \");\n  579: \tAppendString(&string, MetaString(&s->map_zoom_timer));\n  580  \tAppendCString(&string, \"(Timer)\\n\");\n  581  \n  582  \tAppendCString(&string, \"  start_camera: \");\n  583: \tAppendString(&string, MetaString(&s->start_camera));\n  584  \tAppendCString(&string, \"(Camera)\\n\");\n  585  \n  586  \tAppendCString(&string, \"  end_camera: \");\n  587: \tAppendString(&string, MetaString(&s->end_camera));\n  588  \tAppendCString(&string, \"(Camera)\\n\");\n  589  \n  590  \tAppendCString(&string, \"  start_node_pos: \");\n  591: \tAppendString(&string, MetaString(&s->start_node_pos));\n  592  \tAppendCString(&string, \"(Vec2f)\\n\");\n  593  \n  594  \tAppendCString(&string, \"  node_pulse_timer: \");\n  595: \tAppendString(&string, MetaString(&s->node_pulse_timer));\n  596  \tAppendCString(&string, \"(OscillatingTimer)\\n\");\n  597  \n  ...\n  599  \n  600  \tAppendCString(&string, \"  rooms: \");\n  601: \tAppendString(&string, MetaString(&s->rooms));\n  602  \tAppendCString(&string, \"(Array<Room>)\\n\");\n  603  \n  ...\n  605  \n  606  \tAppendCString(&string, \"  player_party: \");\n  607: \tAppendString(&string, MetaString(&s->player_party));\n  608  \tAppendCString(&string, \"(UnitSet)\\n\");\n  609  \n  610  \tAppendCString(&string, \"  map_camera: \");\n  611: \tAppendString(&string, MetaString(&s->map_camera));\n  612  \tAppendCString(&string, \"(Camera)\\n\");\n  613  \n  614  \tAppendCString(&string, \"  current_battle: \");\n  615: \tAppendString(&string, MetaString(&s->current_battle));\n  616  \tAppendCString(&string, \"(Battle)\\n\");\n  617  \n  ...\n  625  // ------------------------------------------\n  626  \n  627: String MetaString(const Color *s)\n  628  {\n  629  \tTIMED_BLOCK;\n  ...\n  660  // ------------------------------------------\n  661  \n  662: String MetaString(const TimedBlockEntry *s)\n  663  {\n  664  \tTIMED_BLOCK;\n  ...\n  686  }\n  687  \n  688: String MetaString(const TimedBlock *s)\n  689  {\n  690  \tTIMED_BLOCK;\n  ...\n  710  // ------------------------------------------\n  711  \n  712: String MetaString(const OverlayOption *s)\n  713  {\n  714  \tTIMED_BLOCK;\n  ...\n  745  }\n  746  \n  747: String MetaString(const DebugOverlay *s)\n  748  {\n  749  \tTIMED_BLOCK;\n  ...\n  771  // ------------------------------------------\n  772  \n  773: String MetaString(const Texture *s)\n  774  {\n  775  \tTIMED_BLOCK;\n  ...\n  793  }\n  794  \n  795: String MetaString(const Framebuffer *s)\n  796  {\n  797  \tTIMED_BLOCK;\n  ...\n  811  \n  812  \tAppendCString(&string, \"  texture: \");\n  813: \tAppendString(&string, MetaString(&s->texture));\n  814  \tAppendCString(&string, \"(Texture)\\n\");\n  815  \n  ...\n  821  }\n  822  \n  823: String MetaString(const DirectedLineLayout *s)\n  824  {\n  825  \tTIMED_BLOCK;\n  ...\n  835  \n  836  \tAppendCString(&string, \"  color: \");\n  837: \tAppendString(&string, MetaString(&s->color));\n  838  \tAppendCString(&string, \"(Color)\\n\");\n  839  \n  ...\n  851  // ------------------------------------------\n  852  \n  853: String MetaString(const EditorMode *s)\n  854  {\n  855  \tTIMED_BLOCK;\n  ...\n  880  }\n  881  \n  882: String MetaString(const InputElementType *s)\n  883  {\n  884  \tTIMED_BLOCK;\n  ...\n  909  }\n  910  \n  911: String MetaString(const AbilityPropertyIndex *s)\n  912  {\n  913  \tTIMED_BLOCK;\n  ...\n  965  }\n  966  \n  967: String MetaString(const BreedPropertyIndex *s)\n  968  {\n  969  \tTIMED_BLOCK;\n  ...\n  988  }\n  989  \n  990: String MetaString(const InputElement *s)\n  991  {\n  992  \tTIMED_BLOCK;\n  ...\n 1000  \n 1001  \tAppendCString(&string, \"  type: \");\n 1002: \tAppendString(&string, MetaString(&s->type));\n 1003  \tAppendCString(&string, \"(InputElementType)\\n\");\n 1004  \n 1005  \tAppendCString(&string, \"  label: \");\n 1006: \tAppendString(&string, MetaString(&s->label));\n 1007  \tAppendCString(&string, \"(String)\\n\");\n 1008  \n 1009  \tAppendCString(&string, \"  pos: \");\n 1010: \tAppendString(&string, MetaString(&s->pos));\n 1011  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1012  \n 1013  \tAppendCString(&string, \"  text: \");\n 1014: \tAppendString(&string, MetaString(&s->text));\n 1015  \tAppendCString(&string, \"(String)\\n\");\n 1016  \n ....\n 1022  }\n 1023  \n 1024: String MetaString(const Editor *s)\n 1025  {\n 1026  \tTIMED_BLOCK;\n ....\n 1036  \n 1037  \tAppendCString(&string, \"  arena_id: \");\n 1038: \tAppendString(&string, MetaString(&s->arena_id));\n 1039  \tAppendCString(&string, \"(PoolId<Arena>)\\n\");\n 1040  \n 1041  \tAppendCString(&string, \"  mode: \");\n 1042: \tAppendString(&string, MetaString(&s->mode));\n 1043  \tAppendCString(&string, \"(EditorMode)\\n\");\n 1044  \n 1045  \tAppendCString(&string, \"  search_panel_layout: \");\n 1046: \tAppendString(&string, MetaString(&s->search_panel_layout));\n 1047  \tAppendCString(&string, \"(ListPanelLayout)\\n\");\n 1048  \n ....\n 1064  \n 1065  \tAppendCString(&string, \"  temp_ability: \");\n 1066: \tAppendString(&string, MetaString(&s->temp_ability));\n 1067  \tAppendCString(&string, \"(Ability)\\n\");\n 1068  \n 1069  \tAppendCString(&string, \"  temp_ability_id: \");\n 1070: \tAppendString(&string, MetaString(&s->temp_ability_id));\n 1071  \tAppendCString(&string, \"(Id<Ability>)\\n\");\n 1072  \n 1073  \tAppendCString(&string, \"  temp_breed: \");\n 1074: \tAppendString(&string, MetaString(&s->temp_breed));\n 1075  \tAppendCString(&string, \"(Breed)\\n\");\n 1076  \n 1077  \tAppendCString(&string, \"  temp_breed_id: \");\n 1078: \tAppendString(&string, MetaString(&s->temp_breed_id));\n 1079  \tAppendCString(&string, \"(Id<Breed>)\\n\");\n 1080  \n ....\n 1088  // ------------------------------------------\n 1089  \n 1090: String MetaString(const EffectType *s)\n 1091  {\n 1092  \tTIMED_BLOCK;\n ....\n 1126  }\n 1127  \n 1128: String MetaString(const Effect *s)\n 1129  {\n 1130  \tTIMED_BLOCK;\n ....\n 1138  \n 1139  \tAppendCString(&string, \"  type: \");\n 1140: \tAppendString(&string, MetaString(&s->type));\n 1141  \tAppendCString(&string, \"(EffectType)\\n\");\n 1142  \n ....\n 1148  }\n 1149  \n 1150: String MetaString(const EffectParams_Damage *s)\n 1151  {\n 1152  \tTIMED_BLOCK;\n ....\n 1160  \n 1161  \tAppendCString(&string, \"  amount: \");\n 1162: \tAppendString(&string, MetaString(&s->amount));\n 1163  \tAppendCString(&string, \"(TraitSet)\\n\");\n 1164  \n ....\n 1168  }\n 1169  \n 1170: String MetaString(const EffectParams_DamageIgnoreArmor *s)\n 1171  {\n 1172  \tTIMED_BLOCK;\n ....\n 1180  \n 1181  \tAppendCString(&string, \"  amount: \");\n 1182: \tAppendString(&string, MetaString(&s->amount));\n 1183  \tAppendCString(&string, \"(TraitSet)\\n\");\n 1184  \n ....\n 1188  }\n 1189  \n 1190: String MetaString(const EffectParams_Restore *s)\n 1191  {\n 1192  \tTIMED_BLOCK;\n ....\n 1200  \n 1201  \tAppendCString(&string, \"  amount: \");\n 1202: \tAppendString(&string, MetaString(&s->amount));\n 1203  \tAppendCString(&string, \"(TraitSet)\\n\");\n 1204  \n ....\n 1208  }\n 1209  \n 1210: String MetaString(const EffectParams_Gift *s)\n 1211  {\n 1212  \tTIMED_BLOCK;\n ....\n 1220  \n 1221  \tAppendCString(&string, \"  amount: \");\n 1222: \tAppendString(&string, MetaString(&s->amount));\n 1223  \tAppendCString(&string, \"(TraitSet)\\n\");\n 1224  \n ....\n 1228  }\n 1229  \n 1230: String MetaString(const EffectParams_Steal *s)\n 1231  {\n 1232  \tTIMED_BLOCK;\n ....\n 1240  \n 1241  \tAppendCString(&string, \"  amount: \");\n 1242: \tAppendString(&string, MetaString(&s->amount));\n 1243  \tAppendCString(&string, \"(TraitSet)\\n\");\n 1244  \n ....\n 1252  // ------------------------------------------\n 1253  \n 1254: String MetaString(const BattleScore *s)\n 1255  {\n 1256  \tTIMED_BLOCK;\n ....\n 1278  }\n 1279  \n 1280: String MetaString(const AiAction *s)\n 1281  {\n 1282  \tTIMED_BLOCK;\n ....\n 1290  \n 1291  \tAppendCString(&string, \"  ability: \");\n 1292: \tAppendString(&string, MetaString(&s->ability));\n 1293  \tAppendCString(&string, \"(Ability)\\n\");\n 1294  \n ....\n 1316  // ------------------------------------------\n 1317  \n 1318: String MetaString(const FrametimeGraphState *s)\n 1319  {\n 1320  \tTIMED_BLOCK;\n ....\n 1336  \n 1337  \tAppendCString(&string, \"  ui_container: \");\n 1338: \tAppendString(&string, MetaString(&s->ui_container));\n 1339  \tAppendCString(&string, \"(ImguiContainer)\\n\");\n 1340  \n 1341  \tAppendCString(&string, \"  label_text: \");\n 1342: \tAppendString(&string, MetaString(&s->label_text));\n 1343  \tAppendCString(&string, \"(TextLayout)\\n\");\n 1344  \n ....\n 1360  // ------------------------------------------\n 1361  \n 1362: String MetaString(const GameInitData *s)\n 1363  {\n 1364  \tTIMED_BLOCK;\n ....\n 1372  \n 1373  \tAppendCString(&string, \"  per_frame_arena_id: \");\n 1374: \tAppendString(&string, MetaString(&s->per_frame_arena_id));\n 1375  \tAppendCString(&string, \"(PoolId<Arena>)\\n\");\n 1376  \n 1377  \tAppendCString(&string, \"  permanent_arena_id: \");\n 1378: \tAppendString(&string, MetaString(&s->permanent_arena_id));\n 1379  \tAppendCString(&string, \"(PoolId<Arena>)\\n\");\n 1380  \n ....\n 1386  }\n 1387  \n 1388: String MetaString(const Game *s)\n 1389  {\n 1390  \tTIMED_BLOCK;\n ....\n 1402  \n 1403  \tAppendCString(&string, \"  current_state: \");\n 1404: \tAppendString(&string, MetaString(&s->current_state));\n 1405  \tAppendCString(&string, \"(GameState)\\n\");\n 1406  \n ....\n 1408  \n 1409  \tAppendCString(&string, \"  log_state: \");\n 1410: \tAppendString(&string, MetaString(&s->log_state));\n 1411  \tAppendCString(&string, \"(LogState)\\n\");\n 1412  \n ....\n 1416  \n 1417  \tAppendCString(&string, \"  table_draw_state: \");\n 1418: \tAppendString(&string, MetaString(&s->table_draw_state));\n 1419  \tAppendCString(&string, \"(TableDrawState)\\n\");\n 1420  \n ....\n 1422  \n 1423  \tAppendCString(&string, \"  debug_overlay: \");\n 1424: \tAppendString(&string, MetaString(&s->debug_overlay));\n 1425  \tAppendCString(&string, \"(DebugOverlay)\\n\");\n 1426  \n 1427  \tAppendCString(&string, \"  debug_container: \");\n 1428: \tAppendString(&string, MetaString(&s->debug_container));\n 1429  \tAppendCString(&string, \"(ImguiContainer)\\n\");\n 1430  \n 1431  \tAppendCString(&string, \"  input: \");\n 1432: \tAppendString(&string, MetaString(&s->input));\n 1433  \tAppendCString(&string, \"(InputState)\\n\");\n 1434  \n 1435  \tAppendCString(&string, \"  temp_screen_texture: \");\n 1436: \tAppendString(&string, MetaString(&s->temp_screen_texture));\n 1437  \tAppendCString(&string, \"(Texture)\\n\");\n 1438  \n 1439  \tAppendCString(&string, \"  prepass_framebuffer: \");\n 1440: \tAppendString(&string, MetaString(&s->prepass_framebuffer));\n 1441  \tAppendCString(&string, \"(Framebuffer)\\n\");\n 1442  \n ....\n 1458  \n 1459  \tAppendCString(&string, \"  window_size: \");\n 1460: \tAppendString(&string, MetaString(&s->window_size));\n 1461  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1462  \n 1463  \tAppendCString(&string, \"  camera: \");\n 1464: \tAppendString(&string, MetaString(&s->camera));\n 1465  \tAppendCString(&string, \"(Camera)\\n\");\n 1466  \n ....\n 1468  \n 1469  \tAppendCString(&string, \"  string_bmp_size: \");\n 1470: \tAppendString(&string, MetaString(&s->string_bmp_size));\n 1471  \tAppendCString(&string, \"(Vec2i)\\n\");\n 1472  \n 1473  \tAppendCString(&string, \"  player_party: \");\n 1474: \tAppendString(&string, MetaString(&s->player_party));\n 1475  \tAppendCString(&string, \"(UnitSet)\\n\");\n 1476  \n 1477  \tAppendCString(&string, \"  editor_state: \");\n 1478: \tAppendString(&string, MetaString(&s->editor_state));\n 1479  \tAppendCString(&string, \"(Editor)\\n\");\n 1480  \n 1481  \tAppendCString(&string, \"  options_menu: \");\n 1482: \tAppendString(&string, MetaString(&s->options_menu));\n 1483  \tAppendCString(&string, \"(OptionsMenu)\\n\");\n 1484  \n 1485  \tAppendCString(&string, \"  mainmenu_state: \");\n 1486: \tAppendString(&string, MetaString(&s->mainmenu_state));\n 1487  \tAppendCString(&string, \"(MainMenu)\\n\");\n 1488  \n 1489  \tAppendCString(&string, \"  campaign: \");\n 1490: \tAppendString(&string, MetaString(&s->campaign));\n 1491  \tAppendCString(&string, \"(Campaign)\\n\");\n 1492  \n 1493  \tAppendCString(&string, \"  ai_explorer: \");\n 1494: \tAppendString(&string, MetaString(&s->ai_explorer));\n 1495  \tAppendCString(&string, \"(AiExplorer)\\n\");\n 1496  \n 1497  \tAppendCString(&string, \"  test_mode: \");\n 1498: \tAppendString(&string, MetaString(&s->test_mode));\n 1499  \tAppendCString(&string, \"(TestMode)\\n\");\n 1500  \n 1501  \tAppendCString(&string, \"  pointer_cursor: \");\n 1502: \tAppendString(&string, MetaString(&s->pointer_cursor));\n 1503  \tAppendCString(&string, \"(Sprite)\\n\");\n 1504  \n 1505  \tAppendCString(&string, \"  target_cursor: \");\n 1506: \tAppendString(&string, MetaString(&s->target_cursor));\n 1507  \tAppendCString(&string, \"(Sprite)\\n\");\n 1508  \n 1509  \tAppendCString(&string, \"  red_target_cursor: \");\n 1510: \tAppendString(&string, MetaString(&s->red_target_cursor));\n 1511  \tAppendCString(&string, \"(Sprite)\\n\");\n 1512  \n 1513  \tAppendCString(&string, \"  generate_node_graph_params: \");\n 1514: \tAppendString(&string, MetaString(&s->generate_node_graph_params));\n 1515  \tAppendCString(&string, \"(GenerateNodeGraph_Params)\\n\");\n 1516  \n ....\n 1530  // ------------------------------------------\n 1531  \n 1532: String MetaString(const GameState *s)\n 1533  {\n 1534  \tTIMED_BLOCK;\n ....\n 1580  \n 1581  \n 1582: String MetaString(const GenerateNodeGraph_Params *s)\n 1583  {\n 1584  \tTIMED_BLOCK;\n ....\n 1630  // ------------------------------------------\n 1631  \n 1632: String MetaString(const ListPanelLayout *s)\n 1633  {\n 1634  \tTIMED_BLOCK;\n ....\n 1642  \n 1643  \tAppendCString(&string, \"  rect: \");\n 1644: \tAppendString(&string, MetaString(&s->rect));\n 1645  \tAppendCString(&string, \"(Rect)\\n\");\n 1646  \n ....\n 1650  }\n 1651  \n 1652: String MetaString(const ListPanelResponse *s)\n 1653  {\n 1654  \tTIMED_BLOCK;\n ....\n 1670  }\n 1671  \n 1672: String MetaString(const ListPanel_ *s)\n 1673  {\n 1674  \tTIMED_BLOCK;\n ....\n 1682  \n 1683  \tAppendCString(&string, \"  layout: \");\n 1684: \tAppendString(&string, MetaString(&s->layout));\n 1685  \tAppendCString(&string, \"(ListPanelLayout)\\n\");\n 1686  \n ....\n 1694  }\n 1695  \n 1696: String MetaString(const ButtonLayout *s)\n 1697  {\n 1698  \tTIMED_BLOCK;\n ....\n 1706  \n 1707  \tAppendCString(&string, \"  label_layout: \");\n 1708: \tAppendString(&string, MetaString(&s->label_layout));\n 1709  \tAppendCString(&string, \"(TextLayout)\\n\");\n 1710  \n 1711  \tAppendCString(&string, \"  button_color: \");\n 1712: \tAppendString(&string, MetaString(&s->button_color));\n 1713  \tAppendCString(&string, \"(Color)\\n\");\n 1714  \n 1715  \tAppendCString(&string, \"  button_hover_color: \");\n 1716: \tAppendString(&string, MetaString(&s->button_hover_color));\n 1717  \tAppendCString(&string, \"(Color)\\n\");\n 1718  \n 1719  \tAppendCString(&string, \"  label_hover_color: \");\n 1720: \tAppendString(&string, MetaString(&s->label_hover_color));\n 1721  \tAppendCString(&string, \"(Color)\\n\");\n 1722  \n 1723  \tAppendCString(&string, \"  align: \");\n 1724: \tAppendString(&string, MetaString(&s->align));\n 1725  \tAppendCString(&string, \"(Align)\\n\");\n 1726  \n ....\n 1732  }\n 1733  \n 1734: String MetaString(const TextEntryLayout *s)\n 1735  {\n 1736  \tTIMED_BLOCK;\n ....\n 1744  \n 1745  \tAppendCString(&string, \"  size: \");\n 1746: \tAppendString(&string, MetaString(&s->size));\n 1747  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1748  \n 1749  \tAppendCString(&string, \"  label_layout: \");\n 1750: \tAppendString(&string, MetaString(&s->label_layout));\n 1751  \tAppendCString(&string, \"(TextLayout)\\n\");\n 1752  \n 1753  \tAppendCString(&string, \"  text_layout: \");\n 1754: \tAppendString(&string, MetaString(&s->text_layout));\n 1755  \tAppendCString(&string, \"(TextLayout)\\n\");\n 1756  \n 1757  \tAppendCString(&string, \"  align: \");\n 1758: \tAppendString(&string, MetaString(&s->align));\n 1759  \tAppendCString(&string, \"(Align)\\n\");\n 1760  \n ....\n 1764  }\n 1765  \n 1766: String MetaString(const IntegerBoxLayout *s)\n 1767  {\n 1768  \tTIMED_BLOCK;\n ....\n 1776  \n 1777  \tAppendCString(&string, \"  size: \");\n 1778: \tAppendString(&string, MetaString(&s->size));\n 1779  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1780  \n 1781  \tAppendCString(&string, \"  border_color: \");\n 1782: \tAppendString(&string, MetaString(&s->border_color));\n 1783  \tAppendCString(&string, \"(Color)\\n\");\n 1784  \n 1785  \tAppendCString(&string, \"  label_layout: \");\n 1786: \tAppendString(&string, MetaString(&s->label_layout));\n 1787  \tAppendCString(&string, \"(TextLayout)\\n\");\n 1788  \n 1789  \tAppendCString(&string, \"  text_layout: \");\n 1790: \tAppendString(&string, MetaString(&s->text_layout));\n 1791  \tAppendCString(&string, \"(TextLayout)\\n\");\n 1792  \n ....\n 1796  }\n 1797  \n 1798: String MetaString(const IntegerBoxResponse *s)\n 1799  {\n 1800  \tTIMED_BLOCK;\n ....\n 1814  }\n 1815  \n 1816: String MetaString(const ImguiContainer *s)\n 1817  {\n 1818  \tTIMED_BLOCK;\n ....\n 1826  \n 1827  \tAppendCString(&string, \"  pos: \");\n 1828: \tAppendString(&string, MetaString(&s->pos));\n 1829  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1830  \n 1831  \tAppendCString(&string, \"  max_size: \");\n 1832: \tAppendString(&string, MetaString(&s->max_size));\n 1833  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1834  \n 1835  \tAppendCString(&string, \"  pen: \");\n 1836: \tAppendString(&string, MetaString(&s->pen));\n 1837  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1838  \n ....\n 1842  \n 1843  \tAppendCString(&string, \"  button_layout: \");\n 1844: \tAppendString(&string, MetaString(&s->button_layout));\n 1845  \tAppendCString(&string, \"(ButtonLayout)\\n\");\n 1846  \n 1847  \tAppendCString(&string, \"  text_entry_layout: \");\n 1848: \tAppendString(&string, MetaString(&s->text_entry_layout));\n 1849  \tAppendCString(&string, \"(TextEntryLayout)\\n\");\n 1850  \n ....\n 1854  }\n 1855  \n 1856: String MetaString(const ButtonResponse *s)\n 1857  {\n 1858  \tTIMED_BLOCK;\n ....\n 1872  \n 1873  \tAppendCString(&string, \"  rect: \");\n 1874: \tAppendString(&string, MetaString(&s->rect));\n 1875  \tAppendCString(&string, \"(Rect)\\n\");\n 1876  \n ....\n 1880  }\n 1881  \n 1882: String MetaString(const TextEntryResponse *s)\n 1883  {\n 1884  \tTIMED_BLOCK;\n ....\n 1906  // ------------------------------------------\n 1907  \n 1908: String MetaString(const InputState *s)\n 1909  {\n 1910  \tTIMED_BLOCK;\n ....\n 1928  \n 1929  \tAppendCString(&string, \"  prev_mouse_pos: \");\n 1930: \tAppendString(&string, MetaString(&s->prev_mouse_pos));\n 1931  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1932  \n 1933  \tAppendCString(&string, \"  mouse_pos: \");\n 1934: \tAppendString(&string, MetaString(&s->mouse_pos));\n 1935  \tAppendCString(&string, \"(Vec2f)\\n\");\n 1936  \n ....\n 1950  // ------------------------------------------\n 1951  \n 1952: String MetaString(const VirtualKey *s)\n 1953  {\n 1954  \tTIMED_BLOCK;\n ....\n 1977  // ------------------------------------------\n 1978  \n 1979: String MetaString(const KeyBind *s)\n 1980  {\n 1981  \tTIMED_BLOCK;\n ....\n 2044  // ------------------------------------------\n 2045  \n 2046: String MetaString(const LogState *s)\n 2047  {\n 2048  \tTIMED_BLOCK;\n ....\n 2080  // ------------------------------------------\n 2081  \n 2082: String MetaString(const MainMenu *s)\n 2083  {\n 2084  \tTIMED_BLOCK;\n ....\n 2092  \n 2093  \tAppendCString(&string, \"  option_strings: \");\n 2094: \tAppendString(&string, MetaString(&s->option_strings));\n 2095  \tAppendCString(&string, \"(Array<String>)\\n\");\n 2096  \n ....\n 2108  // ------------------------------------------\n 2109  \n 2110: String MetaString(const MapResponse *s)\n 2111  {\n 2112  \tTIMED_BLOCK;\n ....\n 2120  \n 2121  \tAppendCString(&string, \"  start_node_pos: \");\n 2122: \tAppendString(&string, MetaString(&s->start_node_pos));\n 2123  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2124  \n ....\n 2140  // ------------------------------------------\n 2141  \n 2142: String MetaString(const Arena *s)\n 2143  {\n 2144  \tTIMED_BLOCK;\n ....\n 2180  // ------------------------------------------\n 2181  \n 2182: String MetaString(const Node *s)\n 2183  {\n 2184  \tTIMED_BLOCK;\n ....\n 2192  \n 2193  \tAppendCString(&string, \"  pos: \");\n 2194: \tAppendString(&string, MetaString(&s->pos));\n 2195  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2196  \n 2197  \tAppendCString(&string, \"  vel: \");\n 2198: \tAppendString(&string, MetaString(&s->vel));\n 2199  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2200  \n ....\n 2208  }\n 2209  \n 2210: String MetaString(const Edge *s)\n 2211  {\n 2212  \tTIMED_BLOCK;\n ....\n 2228  }\n 2229  \n 2230: String MetaString(const NodeGraph *s)\n 2231  {\n 2232  \tTIMED_BLOCK;\n ....\n 2240  \n 2241  \tAppendCString(&string, \"  nodes: \");\n 2242: \tAppendString(&string, MetaString(&s->nodes));\n 2243  \tAppendCString(&string, \"(Array<Node>)\\n\");\n 2244  \n 2245  \tAppendCString(&string, \"  edges: \");\n 2246: \tAppendString(&string, MetaString(&s->edges));\n 2247  \tAppendCString(&string, \"(Array<Edge>)\\n\");\n 2248  \n ....\n 2256  }\n 2257  \n 2258: String MetaString(const NodeGraphResponse *s)\n 2259  {\n 2260  \tTIMED_BLOCK;\n ....\n 2268  \n 2269  \tAppendCString(&string, \"  start_node_pos: \");\n 2270: \tAppendString(&string, MetaString(&s->start_node_pos));\n 2271  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2272  \n ....\n 2280  }\n 2281  \n 2282: String MetaString(const ForceSimParams *s)\n 2283  {\n 2284  \tTIMED_BLOCK;\n ....\n 2292  \n 2293  \tAppendCString(&string, \"  temp_arena: \");\n 2294: \tAppendString(&string, MetaString(&s->temp_arena));\n 2295  \tAppendCString(&string, \"(PoolId<Arena>)\\n\");\n 2296  \n ....\n 2310  }\n 2311  \n 2312: String MetaString(const ForceSimInvalidationReason *s)\n 2313  {\n 2314  \tTIMED_BLOCK;\n ....\n 2339  }\n 2340  \n 2341: String MetaString(const ForceSimState *s)\n 2342  {\n 2343  \tTIMED_BLOCK;\n ....\n 2353  \n 2354  \tAppendCString(&string, \"  invalidation_reason: \");\n 2355: \tAppendString(&string, MetaString(&s->invalidation_reason));\n 2356  \tAppendCString(&string, \"(ForceSimInvalidationReason)\\n\");\n 2357  \n ....\n 2375  // ------------------------------------------\n 2376  \n 2377: String MetaString(const OptionsMenu *s)\n 2378  {\n 2379  \tTIMED_BLOCK;\n ....\n 2399  // ------------------------------------------\n 2400  \n 2401: String MetaString(const OscillatingTimer *s)\n 2402  {\n 2403  \tTIMED_BLOCK;\n ....\n 2427  // ------------------------------------------\n 2428  \n 2429: String MetaString(const PassiveSkill *s)\n 2430  {\n 2431  \tTIMED_BLOCK;\n ....\n 2445  }\n 2446  \n 2447: String MetaString(const PassiveNode *s)\n 2448  {\n 2449  \tTIMED_BLOCK;\n ....\n 2465  }\n 2466  \n 2467: String MetaString(const PassiveSkillTree *s)\n 2468  {\n 2469  \tTIMED_BLOCK;\n ....\n 2492  \n 2493  template<typename Type>\n 2494: String MetaString(const PoolId<Type> *s)\n 2495  {\n 2496  \tTIMED_BLOCK;\n ....\n 2511  \n 2512  template<typename Type>\n 2513: String MetaString(const PoolEntry<Type> *s)\n 2514  {\n 2515  \tTIMED_BLOCK;\n ....\n 2523  \n 2524  \tAppendCString(&string, \"  data: \");\n 2525: \tAppendString(&string, MetaString(&s->data));\n 2526  \tAppendCString(&string, \"(Type)\\n\");\n 2527  \n 2528  \tAppendCString(&string, \"  id: \");\n 2529: \tAppendString(&string, MetaString(&s->id));\n 2530  \tAppendCString(&string, \"(PoolId<Type>)\\n\");\n 2531  \n ....\n 2536  \n 2537  template<typename Type>\n 2538: String MetaString(const Pool<Type> *s)\n 2539  {\n 2540  \tTIMED_BLOCK;\n ....\n 2564  // ------------------------------------------\n 2565  \n 2566: String MetaString(const LCG *s)\n 2567  {\n 2568  \tTIMED_BLOCK;\n ....\n 2592  // ------------------------------------------\n 2593  \n 2594: String MetaString(const RingBuffer *s)\n 2595  {\n 2596  \tTIMED_BLOCK;\n ....\n 2620  // ------------------------------------------\n 2621  \n 2622: String MetaString(const RoomType *s)\n 2623  {\n 2624  \tTIMED_BLOCK;\n ....\n 2661  }\n 2662  \n 2663: String MetaString(const Room *s)\n 2664  {\n 2665  \tTIMED_BLOCK;\n ....\n 2673  \n 2674  \tAppendCString(&string, \"  type: \");\n 2675: \tAppendString(&string, MetaString(&s->type));\n 2676  \tAppendCString(&string, \"(RoomType)\\n\");\n 2677  \n ....\n 2685  // ------------------------------------------\n 2686  \n 2687: String MetaString(const Sprite *s)\n 2688  {\n 2689  \tTIMED_BLOCK;\n ....\n 2699  \n 2700  \tAppendCString(&string, \"  size: \");\n 2701: \tAppendString(&string, MetaString(&s->size));\n 2702  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2703  \n 2704  \tAppendCString(&string, \"  origin: \");\n 2705: \tAppendString(&string, MetaString(&s->origin));\n 2706  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2707  \n ....\n 2715  // ------------------------------------------\n 2716  \n 2717: String MetaString(const String *s)\n 2718  {\n 2719  \tTIMED_BLOCK;\n ....\n 2742  \n 2743  template<typename Type>\n 2744: String MetaString(const Id<Type> *s)\n 2745  {\n 2746  \tTIMED_BLOCK;\n ....\n 2763  \n 2764  template<typename Type>\n 2765: String MetaString(const TableEntry<Type> *s)\n 2766  {\n 2767  \tTIMED_BLOCK;\n ....\n 2775  \n 2776  \tAppendCString(&string, \"  data: \");\n 2777: \tAppendString(&string, MetaString(&s->data));\n 2778  \tAppendCString(&string, \"(Type)\\n\");\n 2779  \n ....\n 2781  \n 2782  \tAppendCString(&string, \"  id: \");\n 2783: \tAppendString(&string, MetaString(&s->id));\n 2784  \tAppendCString(&string, \"(Id<Type>)\\n\");\n 2785  \n ....\n 2790  \n 2791  template<typename Type>\n 2792: String MetaString(const Table<Type> *s)\n 2793  {\n 2794  \tTIMED_BLOCK;\n ....\n 2816  // ------------------------------------------\n 2817  \n 2818: String MetaString(const TableDrawMode *s)\n 2819  {\n 2820  \tTIMED_BLOCK;\n ....\n 2848  }\n 2849  \n 2850: String MetaString(const TableDrawState *s)\n 2851  {\n 2852  \tTIMED_BLOCK;\n ....\n 2860  \n 2861  \tAppendCString(&string, \"  cur_mode: \");\n 2862: \tAppendString(&string, MetaString(&s->cur_mode));\n 2863  \tAppendCString(&string, \"(TableDrawMode)\\n\");\n 2864  \n 2865  \tAppendCString(&string, \"  ui_container: \");\n 2866: \tAppendString(&string, MetaString(&s->ui_container));\n 2867  \tAppendCString(&string, \"(ImguiContainer)\\n\");\n 2868  \n ....\n 2876  // ------------------------------------------\n 2877  \n 2878: String MetaString(const TargetClass *s)\n 2879  {\n 2880  \tTIMED_BLOCK;\n ....\n 2936  // ------------------------------------------\n 2937  \n 2938: String MetaString(const TestMode *s)\n 2939  {\n 2940  \tTIMED_BLOCK;\n ....\n 2948  \n 2949  \tAppendCString(&string, \"  a0: \");\n 2950: \tAppendString(&string, MetaString(&s->a0));\n 2951  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2952  \n 2953  \tAppendCString(&string, \"  a1: \");\n 2954: \tAppendString(&string, MetaString(&s->a1));\n 2955  \tAppendCString(&string, \"(Vec2f)\\n\");\n 2956  \n ....\n 2966  // ------------------------------------------\n 2967  \n 2968: String MetaString(const TokenType_ *s)\n 2969  {\n 2970  \tTIMED_BLOCK;\n ....\n 3040  }\n 3041  \n 3042: String MetaString(const Token *s)\n 3043  {\n 3044  \tTIMED_BLOCK;\n ....\n 3052  \n 3053  \tAppendCString(&string, \"  type: \");\n 3054: \tAppendString(&string, MetaString(&s->type));\n 3055  \tAppendCString(&string, \"(TokenType_)\\n\");\n 3056  \n ....\n 3068  // ------------------------------------------\n 3069  \n 3070: String MetaString(const Font *s)\n 3071  {\n 3072  \tTIMED_BLOCK;\n ....\n 3102  }\n 3103  \n 3104: String MetaString(const TextLayout *s)\n 3105  {\n 3106  \tTIMED_BLOCK;\n ....\n 3116  \n 3117  \tAppendCString(&string, \"  color: \");\n 3118: \tAppendString(&string, MetaString(&s->color));\n 3119  \tAppendCString(&string, \"(Color)\\n\");\n 3120  \n 3121  \tAppendCString(&string, \"  hover_color: \");\n 3122: \tAppendString(&string, MetaString(&s->hover_color));\n 3123  \tAppendCString(&string, \"(Color)\\n\");\n 3124  \n ....\n 3128  \n 3129  \tAppendCString(&string, \"  align: \");\n 3130: \tAppendString(&string, MetaString(&s->align));\n 3131  \tAppendCString(&string, \"(Align)\\n\");\n 3132  \n ....\n 3140  }\n 3141  \n 3142: String MetaString(const TextResponse *s)\n 3143  {\n 3144  \tTIMED_BLOCK;\n ....\n 3152  \n 3153  \tAppendCString(&string, \"  rect: \");\n 3154: \tAppendString(&string, MetaString(&s->rect));\n 3155  \tAppendCString(&string, \"(Rect)\\n\");\n 3156  \n ....\n 3166  // ------------------------------------------\n 3167  \n 3168: String MetaString(const Timer *s)\n 3169  {\n 3170  \tTIMED_BLOCK;\n ....\n 3194  // ------------------------------------------\n 3195  \n 3196: String MetaString(const TraitSet *s)\n 3197  {\n 3198  \tTIMED_BLOCK;\n ....\n 3224  // ------------------------------------------\n 3225  \n 3226: String MetaString(const Team *s)\n 3227  {\n 3228  \tTIMED_BLOCK;\n ....\n 3250  }\n 3251  \n 3252: String MetaString(const Breed *s)\n 3253  {\n 3254  \tTIMED_BLOCK;\n ....\n 3264  \n 3265  \tAppendCString(&string, \"  name: \");\n 3266: \tAppendString(&string, MetaString(&s->name));\n 3267  \tAppendCString(&string, \"(String)\\n\");\n 3268  \n 3269  \tAppendCString(&string, \"  max_traits: \");\n 3270: \tAppendString(&string, MetaString(&s->max_traits));\n 3271  \tAppendCString(&string, \"(TraitSet)\\n\");\n 3272  \n ....\n 3280  }\n 3281  \n 3282: String MetaString(const Unit *s)\n 3283  {\n 3284  \tTIMED_BLOCK;\n ....\n 3294  \n 3295  \tAppendCString(&string, \"  name: \");\n 3296: \tAppendString(&string, MetaString(&s->name));\n 3297  \tAppendCString(&string, \"(String)\\n\");\n 3298  \n 3299  \tAppendCString(&string, \"  team: \");\n 3300: \tAppendString(&string, MetaString(&s->team));\n 3301  \tAppendCString(&string, \"(Team)\\n\");\n 3302  \n 3303  \tAppendCString(&string, \"  cur_traits: \");\n 3304: \tAppendString(&string, MetaString(&s->cur_traits));\n 3305  \tAppendCString(&string, \"(TraitSet)\\n\");\n 3306  \n 3307  \tAppendCString(&string, \"  max_traits: \");\n 3308: \tAppendString(&string, MetaString(&s->max_traits));\n 3309  \tAppendCString(&string, \"(TraitSet)\\n\");\n 3310  \n ....\n 3320  }\n 3321  \n 3322: String MetaString(const UnitSlot *s)\n 3323  {\n 3324  \tTIMED_BLOCK;\n ....\n 3332  \n 3333  \tAppendCString(&string, \"  pos: \");\n 3334: \tAppendString(&string, MetaString(&s->pos));\n 3335  \tAppendCString(&string, \"(Vec2f)\\n\");\n 3336  \n ....\n 3340  }\n 3341  \n 3342: String MetaString(const UnitSet *s)\n 3343  {\n 3344  \tTIMED_BLOCK;\n ....\n 3364  // ------------------------------------------\n 3365  \n 3366: String MetaString(const Utf32String *s)\n 3367  {\n 3368  \tTIMED_BLOCK;\n ....\n 3394  // ------------------------------------------\n 3395  \n 3396: String MetaString(const Vec2i *s)\n 3397  {\n 3398  \tTIMED_BLOCK;\n ....\n 3414  }\n 3415  \n 3416: String MetaString(const Vec2f *s)\n 3417  {\n 3418  \tTIMED_BLOCK;\n ....\n 3434  }\n 3435  \n 3436: String MetaString(const Vec3f *s)\n 3437  {\n 3438  \tTIMED_BLOCK;\n ....\n 3456  }\n 3457  \n 3458: String MetaString(const Vec4f *s)\n 3459  {\n 3460  \tTIMED_BLOCK;\n ....\n 3480  }\n 3481  \n 3482: String MetaString(const Mat3f *s)\n 3483  {\n 3484  \tTIMED_BLOCK;\n ....\n 3514  }\n 3515  \n 3516: String MetaString(const Mat4f *s)\n 3517  {\n 3518  \tTIMED_BLOCK;\n ....\n 3562  }\n 3563  \n 3564: String MetaString(const Rect *s)\n 3565  {\n 3566  \tTIMED_BLOCK;\n ....\n 3574  \n 3575  \tAppendCString(&string, \"  pos: \");\n 3576: \tAppendString(&string, MetaString(&s->pos));\n 3577  \tAppendCString(&string, \"(Vec2f)\\n\");\n 3578  \n 3579  \tAppendCString(&string, \"  size: \");\n 3580: \tAppendString(&string, MetaString(&s->size));\n 3581  \tAppendCString(&string, \"(Vec2f)\\n\");\n 3582  \n\nC:\\color-c\\src\\meta_print.h:\n   68  #include \"vec.h\"\n   69  #include \"work_entry.h\"\n   70: String MetaString(const AbilityTier *s);\n   71  \n   72: String MetaString(const Ability *s);\n   73  \n   74: String MetaString(const AiExplorer *s);\n   75  \n   76: String MetaString(const AlignX *s);\n   77  \n   78: String MetaString(const AlignY *s);\n   79  \n   80: String MetaString(const Align *s);\n   81  \n   82  template<typename Type>\n   83: String MetaString(const Array<Type> *s);\n   84  \n   85: String MetaString(const Intent *s);\n   86  \n   87: String MetaString(const BattleEvent *s);\n   88  \n   89: String MetaString(const BattleState *s);\n   90  \n   91: String MetaString(const Battle *s);\n   92  \n   93: String MetaString(const BgraPixel *s);\n   94  \n   95: String MetaString(const Bitmap *s);\n   96  \n   97: String MetaString(const Buffer *s);\n   98  \n   99: String MetaString(const Camera *s);\n  100  \n  101: String MetaString(const CampaignState *s);\n  102  \n  103: String MetaString(const Campaign *s);\n  104  \n  105: String MetaString(const Color *s);\n  106  \n  107: String MetaString(const TimedBlockEntry *s);\n  108  \n  109: String MetaString(const TimedBlock *s);\n  110  \n  111: String MetaString(const OverlayOption *s);\n  112  \n  113: String MetaString(const DebugOverlay *s);\n  114  \n  115: String MetaString(const Texture *s);\n  116  \n  117: String MetaString(const Framebuffer *s);\n  118  \n  119: String MetaString(const DirectedLineLayout *s);\n  120  \n  121: String MetaString(const EditorMode *s);\n  122  \n  123: String MetaString(const InputElementType *s);\n  124  \n  125: String MetaString(const AbilityPropertyIndex *s);\n  126  \n  127: String MetaString(const BreedPropertyIndex *s);\n  128  \n  129: String MetaString(const InputElement *s);\n  130  \n  131: String MetaString(const Editor *s);\n  132  \n  133: String MetaString(const EffectType *s);\n  134  \n  135: String MetaString(const Effect *s);\n  136  \n  137: String MetaString(const EffectParams_Damage *s);\n  138  \n  139: String MetaString(const EffectParams_DamageIgnoreArmor *s);\n  140  \n  141: String MetaString(const EffectParams_Restore *s);\n  142  \n  143: String MetaString(const EffectParams_Gift *s);\n  144  \n  145: String MetaString(const EffectParams_Steal *s);\n  146  \n  147: String MetaString(const BattleScore *s);\n  148  \n  149: String MetaString(const AiAction *s);\n  150  \n  151: String MetaString(const FrametimeGraphState *s);\n  152  \n  153: String MetaString(const GameInitData *s);\n  154  \n  155: String MetaString(const Game *s);\n  156  \n  157: String MetaString(const GameState *s);\n  158  \n  159: String MetaString(const GenerateNodeGraph_Params *s);\n  160  \n  161: String MetaString(const ListPanelLayout *s);\n  162  \n  163: String MetaString(const ListPanelResponse *s);\n  164  \n  165: String MetaString(const ListPanel_ *s);\n  166  \n  167: String MetaString(const ButtonLayout *s);\n  168  \n  169: String MetaString(const TextEntryLayout *s);\n  170  \n  171: String MetaString(const IntegerBoxLayout *s);\n  172  \n  173: String MetaString(const IntegerBoxResponse *s);\n  174  \n  175: String MetaString(const ImguiContainer *s);\n  176  \n  177: String MetaString(const ButtonResponse *s);\n  178  \n  179: String MetaString(const TextEntryResponse *s);\n  180  \n  181: String MetaString(const InputState *s);\n  182  \n  183: String MetaString(const VirtualKey *s);\n  184  \n  185: String MetaString(const KeyBind *s);\n  186  \n  187: String MetaString(const LogState *s);\n  188  \n  189: String MetaString(const MainMenu *s);\n  190  \n  191: String MetaString(const MapResponse *s);\n  192  \n  193: String MetaString(const Arena *s);\n  194  \n  195: String MetaString(const Node *s);\n  196  \n  197: String MetaString(const Edge *s);\n  198  \n  199: String MetaString(const NodeGraph *s);\n  200  \n  201: String MetaString(const NodeGraphResponse *s);\n  202  \n  203: String MetaString(const ForceSimParams *s);\n  204  \n  205: String MetaString(const ForceSimInvalidationReason *s);\n  206  \n  207: String MetaString(const ForceSimState *s);\n  208  \n  209: String MetaString(const OptionsMenu *s);\n  210  \n  211: String MetaString(const OscillatingTimer *s);\n  212  \n  213: String MetaString(const PassiveSkill *s);\n  214  \n  215: String MetaString(const PassiveNode *s);\n  216  \n  217: String MetaString(const PassiveSkillTree *s);\n  218  \n  219  template<typename Type>\n  220: String MetaString(const PoolId<Type> *s);\n  221  \n  222  template<typename Type>\n  223: String MetaString(const PoolEntry<Type> *s);\n  224  \n  225  template<typename Type>\n  226: String MetaString(const Pool<Type> *s);\n  227  \n  228: String MetaString(const LCG *s);\n  229  \n  230: String MetaString(const RingBuffer *s);\n  231  \n  232: String MetaString(const RoomType *s);\n  233  \n  234: String MetaString(const Room *s);\n  235  \n  236: String MetaString(const Sprite *s);\n  237  \n  238: String MetaString(const String *s);\n  239  \n  240  template<typename Type>\n  241: String MetaString(const Id<Type> *s);\n  242  \n  243  template<typename Type>\n  244: String MetaString(const TableEntry<Type> *s);\n  245  \n  246  template<typename Type>\n  247: String MetaString(const Table<Type> *s);\n  248  \n  249: String MetaString(const TableDrawMode *s);\n  250  \n  251: String MetaString(const TableDrawState *s);\n  252  \n  253: String MetaString(const TargetClass *s);\n  254  \n  255: String MetaString(const TestMode *s);\n  256  \n  257: String MetaString(const TokenType_ *s);\n  258  \n  259: String MetaString(const Token *s);\n  260  \n  261: String MetaString(const Font *s);\n  262  \n  263: String MetaString(const TextLayout *s);\n  264  \n  265: String MetaString(const TextResponse *s);\n  266  \n  267: String MetaString(const Timer *s);\n  268  \n  269: String MetaString(const TraitSet *s);\n  270  \n  271: String MetaString(const Team *s);\n  272  \n  273: String MetaString(const Breed *s);\n  274  \n  275: String MetaString(const Unit *s);\n  276  \n  277: String MetaString(const UnitSlot *s);\n  278  \n  279: String MetaString(const UnitSet *s);\n  280  \n  281: String MetaString(const Utf32String *s);\n  282  \n  283: String MetaString(const Vec2i *s);\n  284  \n  285: String MetaString(const Vec2f *s);\n  286  \n  287: String MetaString(const Vec3f *s);\n  288  \n  289: String MetaString(const Vec4f *s);\n  290  \n  291: String MetaString(const Mat3f *s);\n  292  \n  293: String MetaString(const Mat4f *s);\n  294  \n  295: String MetaString(const Rect *s);\n  296  \n  297  \n\n377 matches across 7 files\n\n\nSearching 148 files for \"InitBattle\"\n\nC:\\color-c\\src\\battle.cpp:\n  515  }\n  516  \n  517: void InitBattle(Battle *battle, PoolId<Arena> arena_id)\n  518  {\n  519      // Memory allocation\n\nC:\\color-c\\src\\battle.h:\n   58  };\n   59  \n   60: void InitBattle(Battle *battle, PoolId<Arena> arena_id);\n   61  BattleState TickBattle(Battle *battle);\n   62  \n\nC:\\color-c\\src\\campaign.cpp:\n  567              if(!campaign->room_is_init)\n  568              {\n  569:                 InitBattle(&campaign->current_battle, campaign->battle_arena_id);\n  570                  UnitSet enemy_units = {};\n  571                  int enemy_count = RandomU32(1,3);\n\nC:\\color-c\\src\\game.cpp:\n  187      //AddUnitToUnitSet(CreateUnitByName(StringFromCString(\"Dragon\"), Team::enemies), &battle_units);\n  188      InitMainMenu(&game->mainmenu_state);\n  189: //    InitBattle(&game->current_battle, AllocArena(\"Game Battle\"));\n  190      InitCampaign(&game->campaign);\n  191  \n\n4 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 49278,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/array.cpp",
			"settings":
			{
				"buffer_size": 4075,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/campaign.cpp",
			"settings":
			{
				"buffer_size": 21970,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/meta_print.cpp",
			"settings":
			{
				"buffer_size": 85856,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/meta.cpp",
			"settings":
			{
				"buffer_size": 39090,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/macros.h",
			"settings":
			{
				"buffer_size": 775,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "data/ability.dat",
			"settings":
			{
				"buffer_size": 2161,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/table.cpp",
			"settings":
			{
				"buffer_size": 3632,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/unit.cpp",
			"settings":
			{
				"buffer_size": 22295,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"inc",
				"Increment Selection"
			],
			[
				"incre",
				"Increment Selection"
			],
			[
				"INCRE",
				"Increment Selection"
			],
			[
				"lower ",
				"Convert Case: Lower Case"
			],
			[
				"Incre",
				"Increment Selection"
			],
			[
				"increm",
				"Increment Selection"
			],
			[
				"increment",
				"Increment Selection"
			],
			[
				"build",
				"Build With: buildbat"
			],
			[
				"open",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"ortho",
				"Project: Refresh Folders"
			],
			[
				"util",
				"Permute Lines: Reverse"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"selec",
				"SelectiveUppercase: Uppercase selection words"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Inc",
				"Indentation: Convert to Spaces"
			],
			[
				"increme",
				"Increment Selection"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"project",
				"Project: Add Folder"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"syntax",
				"Preferences: Settings – Syntax Specific"
			],
			[
				"buildv",
				"Disable/Enable buildview for this window"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"toggle menu",
				"View: Toggle Menu"
			],
			[
				"menu",
				"View: Toggle Menu"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 238.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/color-c"
	],
	"file_history":
	[
		"/C/color-c/build/b.bat",
		"/C/color-c/src/battle.cpp",
		"/C/color-c/data/breed.dat",
		"/C/color-c/src/unit.h",
		"/C/color-c/src/editor.cpp",
		"/C/color-c/src/macros.h",
		"/C/color-c/src/unit.cpp",
		"/C/color-c/src/game.cpp",
		"/C/color-c/src/text_render.h",
		"/C/color-c/src/text_render.cpp",
		"/C/color-c/src/const.h",
		"/C/color-c/src/memory.h",
		"/C/color-c/src/memory.cpp",
		"/C/color-c/src/frametimes_draw.cpp",
		"/C/color-c/src/ability.cpp",
		"/C/color-c/src/memory_draw.cpp",
		"/C/color-c/src/frametimes_draw.h",
		"/C/color-c/src/meta_text_parsing.h",
		"/C/color-c/src/meta_text_parsing.cpp",
		"/C/color-c/src/imgui.cpp",
		"/C/color-c/src/main_menu.cpp",
		"/C/color-c/src/options_menu.cpp",
		"/C/color-c/src/campaign.cpp",
		"/C/color-c/logs/log.txt",
		"/C/color-c/logs/critical.log",
		"/C/color-c/src/game.h",
		"/C/color-c/src/global.h",
		"/C/color-c/src/table_draw.cpp",
		"/C/color-c/src/win32_platform.cpp",
		"/C/color-c/src/table_draw.h",
		"/C/color-c/src/game_code_include.cpp",
		"/C/color-c/src/imgui.h",
		"/C/color-c/src/debug_overlay.h",
		"/C/color-c/src/table.h",
		"/C/color-c/src/camera.h",
		"/C/color-c/src/input.cpp",
		"/C/color-c/src/input.h",
		"/C/color-c/src/draw.cpp",
		"/C/color-c/_/todo.txt",
		"/C/color-c/src/camera.cpp",
		"/C/color-c/src/platform_include.cpp",
		"/C/color-c/src/stack.h",
		"/C/color-c/src/draw.h",
		"/C/color-c/src/ring_buffer.cpp",
		"/C/color-c/src/log.cpp",
		"/C/color-c/src/ring_buffer.h",
		"/C/color-c/src/util.cpp",
		"/C/color-c/src/array.cpp",
		"/C/color-c/src/array.h",
		"/C/color-c/src/input_vk_constants.h",
		"/C/color-c/src/win32_platform.h",
		"/C/color-c/src/game_state.h",
		"/C/color-c/src/win32_work_queue.cpp",
		"/C/color-c/data/ability.dat",
		"/C/color-c/src/table.cpp",
		"/C/color-c/src/vec.cpp",
		"/C/color-c/src/battle.h",
		"/C/color-c/src/campaign.h",
		"/C/color-c/src/math.cpp",
		"/C/color-c/src/map.h",
		"/C/color-c/src/map.cpp",
		"/C/color-c/src/room.h",
		"/C/color-c/src/enemy_ai.cpp",
		"/C/color-c/src/pool.h",
		"/C/color-c/src/pool.cpp",
		"/C/color-c/src/node_graph.cpp",
		"/C/color-c/src/node_graph.h",
		"/C/color-c/src/debug.h",
		"/C/color-c/src/debug.cpp",
		"/C/color-c/src/memory_draw.h",
		"/C/color-c/src/platform.h",
		"/C/color-c/src/main_menu.h",
		"/C/color-c/src/win32_work_queue.h",
		"/C/color-c/src/debug_window.h",
		"/C/color-c/src/work_entry.h",
		"/C/color-c/src/string.cpp",
		"/C/color-c/src/string.h",
		"/C/color-c/src/editor.h",
		"/C/color-c/src/utf32string.cpp",
		"/C/color-c/src/text_parsing.cpp",
		"/C/color-c/src/text_parsing.h",
		"/C/color-c/src/util.h",
		"/C/color-c/logs/DebugTimings.txt",
		"/C/color-c/_/performance_relevant_decisions.txt",
		"/C/color-c/src/better_text_parsing.cpp",
		"/C/color-c/src/enemy_ai.h",
		"/C/color-c/src/shader/outline.cs.glsl",
		"/C/color-c/src/opengl.cpp",
		"/C/color-c/src/shader/gaussian_blur.cs.glsl",
		"/C/color-c/src/opengl.h",
		"/C/color-c/src/meta.cpp",
		"/C/color-c/src/meta_print.cpp",
		"/C/color-c/src/color_vertex.glsl",
		"/C/color-c/src/font_loading.cpp",
		"/C/color-c/src/sprite.cpp",
		"/C/color-c/src/uv_fragment.glsl",
		"/C/color-c/src/log.h",
		"/C/color-c/build/freetype-2.9.1/builds/os2/os2-gcc.mk",
		"/C/color-c/src/uv_vertex.glsl",
		"/C/color-c/src/shader/gaussian_blur.vs.glsl",
		"/C/color-c/src/color_fragment.glsl",
		"/D/work/programming/fps/src/main.cpp",
		"/D/work/programming/fps/src/win32_platform_layer.cpp",
		"/C/color-c/src/ability.h",
		"/C/color-c/src/buffer.h",
		"/C/color-c/src/buffer.cpp",
		"/C/color-c/src/test_mode.cpp",
		"/D/work/programming/fps/src/opengl.cpp",
		"/D/work/programming/fps/src/draw.cpp",
		"/D/work/programming/fps/src/3d.cpp",
		"/D/work/programming/fps/src/game.cpp",
		"/C/color-c/src/align.cpp",
		"/C/color-c/src/align.h",
		"/C/color-c/src/ai_explorer.cpp",
		"/C/color-c/src/geometry.cpp",
		"/C/color-c/src/geometry.h",
		"/C/color-c/src/test_mode.h",
		"/C/color-c/src/ai_explorer.h",
		"/C/color-c/src/traitset.cpp",
		"/C/color-c/src/traitset.h",
		"/C/color-c/src/effect.cpp",
		"/C/color-c/src/effect.h",
		"/C/color-c/src/target_class.h",
		"/C/color-c/src/target_class.cpp",
		"/C/color-c/src/random.cpp",
		"/C/color-c/src/scratch.cpp",
		"/C/color-c/src/permutation.cpp",
		"/C/color-c/src/permutation.h"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 164.0,
		"where_history":
		[
			"C:\\color-c\\src, -*.i",
			"D:\\work\\programming\\color-c\\src, -*.i",
			"D:\\work\\programming\\color-c\\src",
			"D:\\work\\programming\\color-c\\src\\[^\\]*.cpp",
			"D:\\work\\programming\\color-c\\src\\*.cpp, D:\\work\\programming\\color-c\\src\\*.h",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\src\\freetype",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\src\\freetype\\*",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\src\\freetype",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\freetype\\*",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\freetype",
			"D:\\work\\programming\\color-c\\src, -\\freetype\\",
			"D:\\work\\programming\\color-c\\src, -*\\freetype\\",
			"D:\\work\\programming\\color-c\\src, -freetype\\*",
			"D:\\work\\programming\\color-c\\src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"preview_events",
			"GenerateBattlePreviewEvent",
			"Temp",
			"GenerateBattlePreviewEvent",
			"events",
			"GenerateBattlePreview",
			"InitBattle",
			"battle->preview_events",
			"DrawTraitSetWithPreview",
			"preview_trait",
			"preview_traits",
			"DrawUnits",
			"intents",
			"GenerateEnemyIntent",
			"preview_events",
			"intents",
			"EventTraitChangesForUnit",
			"GenerateEnemyIntents",
			"battle->intents",
			"intent",
			"MetaString",
			"name()",
			"no_implement",
			"shift",
			"Random",
			"color.",
			"_RenderUtf32Char",
			"OPTIMIZE",
			"F12",
			".size",
			".size.y",
			"debug_control_draw_depth",
			"GenerateAbilityTier",
			"current_battle",
			"battle",
			"table.",
			"frametime_",
			"LineHeight",
			"imgui::active_container",
			"Reset",
			"OverlayOption",
			"SetCamera",
			"Push",
			"ui",
			"mouse_focus_taken",
			"TakeMouseFocus",
			"MouseFocusTaken",
			"state.",
			"DrawFrametimes",
			"padding",
			"entry_data_buffer",
			"RingBuffer",
			"->hud",
			"hud",
			"unit_slots",
			"CreateUnit",
			"CombineUnit",
			"rooms =",
			"room",
			"state =",
			"draw unit",
			"TraitSet",
			"hovered_node_index",
			"enum class Team",
			"struct UnitSet",
			"UnitFrom",
			"Button(",
			"dk_grey",
			"Draw",
			"MousePos()",
			"dragging_index",
			"SizeUiText",
			"DrawText",
			"ButtonLayout",
			"ReleaseMutex",
			"AddWorkEn",
			"AllocArena",
			"crit",
			"mutex",
			"platform",
			"debug_container",
			"platform_input",
			"InputState",
			"debug_container",
			"debug_overlay",
			"Draw",
			"layer",
			"mutex",
			".\n",
			"speed",
			"CreateWorkQueue",
			"Map Generation",
			"DrawArena",
			"ArenaFromId",
			"TableFromId",
			"CreateArrayFromArena",
			"speed",
			"g_work_queue_system",
			"THREAD_GenerateNodeGraph",
			"SizeTextUtf32",
			"ScratchString",
			"ValidArray",
			"StepNodeGraphForceSimulation",
			"id",
			"GetUnitFromId",
			"String",
			"Texture",
			"struct Texture",
			"1600",
			"BARRIER",
			"0",
			"blur_shader",
			"severity = 0x",
			"FRAME START",
			"blur_dst_texture",
			"opengl",
			"BindTexture",
			"ActiveTexture",
			"256",
			"vsprintf",
			"SHADER",
			"BindFragDataLocation",
			"SwapBuffers",
			"RectTopLeft",
			"AbilityInfoBox",
			"response.",
			"response.rect",
			"Pad"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"text_color.",
			".rect.size",
			".rect.size.y",
			"table->",
			"ui_container",
			"state->",
			"game->debug_overlay.dragging_index",
			"",
			"padded_button_rect",
			"child_size",
			"child_pos",
			".y",
			"unit",
			"focus",
			"armor",
			"ability->",
			"armor",
			"focus",
			".focus",
			"end",
			"start",
			"focus",
			"armor",
			"focus",
			"",
			"ai::",
			"p",
			"battle->intents",
			"graph.",
			"vec",
			"camera.",
			"camera->",
			".y",
			"end",
			"rect",
			"queue",
			"/",
			"graph->",
			"b",
			"a",
			"graph",
			"b",
			"a",
			"graph",
			"params",
			".b",
			".a",
			"graph",
			", edge_percent, &t, &u",
			", edge_percent, &t, &t",
			"cam_move_speed",
			"fprintf(&",
			"in_file",
			"KeyBind keybind",
			"LineHeight",
			"tier.",
			"tc",
			"GetIndexFromName",
			"selected",
			"tc",
			"input",
			"ipnut",
			"UnitSet",
			"FromId",
			"ability_ids",
			"breed",
			"Breed",
			"",
			"Id",
			"FromId",
			"id",
			"AllocArena",
			"",
			"Table",
			"UnitSet",
			"(int)AbilityPropertyIndex",
			"].text.length",
			"editor->input_elements",
			"search_panel_layout",
			"TokenType_",
			"*p",
			"active_string->",
			"active_string",
			"#include \"utf32string.h\"",
			"char",
			"",
			"//log",
			"Utf32String",
			"Utf32FixedString",
			"arena->",
			"arena",
			"caster",
			"DamageIgnoreArmor",
			"ability->",
			"requires",
			"TokenMatchesString(token,",
			"-",
			"EffectParams_",
			">",
			"valid",
			"lcg->",
			"battle->",
			"layout.font->",
			"damage",
			"timer->max",
			"timer->min",
			"timer->speed",
			"battle->",
			"all_targets_clean",
			"target.",
			"c::max_battle",
			"char_size.y",
			"char_size.x",
			"font.face",
			"FAST_FUNCTION",
			"SLOW_FUNCTION",
			"OPTIMIZING_FUNCTION",
			"FASTSLOW_FUNCTION",
			"font->",
			"entry->",
			"Length(traitset_string)",
			", ",
			"fullscreen_",
			"align.y == AlignY",
			"trait_layout",
			"layout.face",
			"layout.font_size",
			"focus"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/table.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1918,
						"regions":
						{
						},
						"selection":
						[
							[
								1114,
								1114
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/array.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2444,
						"regions":
						{
						},
						"selection":
						[
							[
								2357,
								2357
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1167.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/battle.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1810,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/battle.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56134,
						"regions":
						{
						},
						"selection":
						[
							[
								21802,
								21802
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7903.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/memory.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4815,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/memory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1002,
						"regions":
						{
						},
						"selection":
						[
							[
								408,
								408
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "logs/log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8836308,
						"regions":
						{
						},
						"selection":
						[
							[
								8833329,
								8833329
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 4970826.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49278,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										115,
										125
									],
									[
										307,
										317
									],
									[
										609,
										619
									],
									[
										836,
										846
									],
									[
										1178,
										1188
									],
									[
										1377,
										1387
									],
									[
										1655,
										1665
									],
									[
										1818,
										1828
									],
									[
										2057,
										2067
									],
									[
										2328,
										2338
									],
									[
										2691,
										2701
									],
									[
										2980,
										2990
									],
									[
										3307,
										3317
									],
									[
										3678,
										3688
									],
									[
										4131,
										4141
									],
									[
										4483,
										4493
									],
									[
										4645,
										4655
									],
									[
										4817,
										4827
									],
									[
										4985,
										4995
									],
									[
										5110,
										5120
									],
									[
										5257,
										5267
									],
									[
										5409,
										5419
									],
									[
										5584,
										5594
									],
									[
										5759,
										5769
									],
									[
										5902,
										5912
									],
									[
										5997,
										6007
									],
									[
										6092,
										6102
									],
									[
										6234,
										6244
									],
									[
										6379,
										6389
									],
									[
										6534,
										6544
									],
									[
										6685,
										6695
									],
									[
										6849,
										6859
									],
									[
										7017,
										7027
									],
									[
										7138,
										7148
									],
									[
										7294,
										7304
									],
									[
										7457,
										7467
									],
									[
										7624,
										7634
									],
									[
										7749,
										7759
									],
									[
										7849,
										7859
									],
									[
										7999,
										8009
									],
									[
										8160,
										8170
									],
									[
										8320,
										8330
									],
									[
										8500,
										8510
									],
									[
										8672,
										8682
									],
									[
										8842,
										8852
									],
									[
										9012,
										9022
									],
									[
										9196,
										9206
									],
									[
										9399,
										9409
									],
									[
										9596,
										9606
									],
									[
										9794,
										9804
									],
									[
										9966,
										9976
									],
									[
										10064,
										10074
									],
									[
										10203,
										10213
									],
									[
										10342,
										10352
									],
									[
										10487,
										10497
									],
									[
										10636,
										10646
									],
									[
										10793,
										10803
									],
									[
										10895,
										10905
									],
									[
										11044,
										11054
									],
									[
										11207,
										11217
									],
									[
										11380,
										11390
									],
									[
										11585,
										11595
									],
									[
										11800,
										11810
									],
									[
										11968,
										11978
									],
									[
										12133,
										12143
									],
									[
										12300,
										12310
									],
									[
										12472,
										12482
									],
									[
										12660,
										12670
									],
									[
										12839,
										12849
									],
									[
										13005,
										13015
									],
									[
										13172,
										13182
									],
									[
										13340,
										13350
									],
									[
										13478,
										13488
									],
									[
										13582,
										13592
									],
									[
										13725,
										13735
									],
									[
										13827,
										13837
									],
									[
										13972,
										13982
									],
									[
										14068,
										14078
									],
									[
										14222,
										14232
									],
									[
										14340,
										14350
									],
									[
										14499,
										14509
									],
									[
										14657,
										14667
									],
									[
										14756,
										14766
									],
									[
										14861,
										14871
									],
									[
										14970,
										14980
									],
									[
										15077,
										15087
									],
									[
										15229,
										15239
									],
									[
										15391,
										15401
									],
									[
										15542,
										15552
									],
									[
										15691,
										15701
									],
									[
										15805,
										15815
									],
									[
										15955,
										15965
									],
									[
										16117,
										16127
									],
									[
										16287,
										16297
									],
									[
										16484,
										16494
									],
									[
										16655,
										16665
									],
									[
										16828,
										16838
									],
									[
										16993,
										17003
									],
									[
										17163,
										17173
									],
									[
										17262,
										17272
									],
									[
										17408,
										17418
									],
									[
										17526,
										17536
									],
									[
										17687,
										17697
									],
									[
										17805,
										17815
									],
									[
										17977,
										17987
									],
									[
										18095,
										18105
									],
									[
										18257,
										18267
									],
									[
										18375,
										18385
									],
									[
										18534,
										18544
									],
									[
										18652,
										18662
									],
									[
										18812,
										18822
									],
									[
										18974,
										18984
									],
									[
										19074,
										19084
									],
									[
										19225,
										19235
									],
									[
										19387,
										19397
									],
									[
										19554,
										19564
									],
									[
										19727,
										19737
									],
									[
										19895,
										19905
									],
									[
										20061,
										20071
									],
									[
										20247,
										20257
									],
									[
										20382,
										20392
									],
									[
										20535,
										20545
									],
									[
										20717,
										20727
									],
									[
										20901,
										20911
									],
									[
										21095,
										21105
									],
									[
										21272,
										21282
									],
									[
										21443,
										21453
									],
									[
										21614,
										21624
									],
									[
										21796,
										21806
									],
									[
										21988,
										21998
									],
									[
										22147,
										22157
									],
									[
										22325,
										22335
									],
									[
										22494,
										22504
									],
									[
										22662,
										22672
									],
									[
										22829,
										22839
									],
									[
										23003,
										23013
									],
									[
										23170,
										23180
									],
									[
										23334,
										23344
									],
									[
										23501,
										23511
									],
									[
										23669,
										23679
									],
									[
										23839,
										23849
									],
									[
										24012,
										24022
									],
									[
										24198,
										24208
									],
									[
										24396,
										24406
									],
									[
										24493,
										24503
									],
									[
										24650,
										24660
									],
									[
										24805,
										24815
									],
									[
										24917,
										24927
									],
									[
										25023,
										25033
									],
									[
										25175,
										25185
									],
									[
										25300,
										25310
									],
									[
										25460,
										25470
									],
									[
										25631,
										25641
									],
									[
										25803,
										25813
									],
									[
										25980,
										25990
									],
									[
										26144,
										26154
									],
									[
										26258,
										26268
									],
									[
										26413,
										26423
									],
									[
										26571,
										26581
									],
									[
										26741,
										26751
									],
									[
										26904,
										26914
									],
									[
										27018,
										27028
									],
									[
										27174,
										27184
									],
									[
										27332,
										27342
									],
									[
										27498,
										27508
									],
									[
										27668,
										27678
									],
									[
										27793,
										27803
									],
									[
										27900,
										27910
									],
									[
										28053,
										28063
									],
									[
										28206,
										28216
									],
									[
										28359,
										28369
									],
									[
										28531,
										28541
									],
									[
										28710,
										28720
									],
									[
										28846,
										28856
									],
									[
										29000,
										29010
									],
									[
										29112,
										29122
									],
									[
										29262,
										29272
									],
									[
										29422,
										29432
									],
									[
										29587,
										29597
									],
									[
										29749,
										29759
									],
									[
										29892,
										29902
									],
									[
										30032,
										30042
									],
									[
										30173,
										30183
									],
									[
										30331,
										30341
									],
									[
										30506,
										30516
									],
									[
										30667,
										30677
									],
									[
										30834,
										30844
									],
									[
										30972,
										30982
									],
									[
										31115,
										31125
									],
									[
										31263,
										31273
									],
									[
										31375,
										31385
									],
									[
										31468,
										31478
									],
									[
										31618,
										31628
									],
									[
										31776,
										31786
									],
									[
										31896,
										31906
									],
									[
										32063,
										32073
									],
									[
										32186,
										32196
									],
									[
										32346,
										32356
									],
									[
										32473,
										32483
									],
									[
										32588,
										32598
									],
									[
										32756,
										32766
									],
									[
										32949,
										32959
									],
									[
										33093,
										33103
									],
									[
										33242,
										33252
									],
									[
										33343,
										33353
									],
									[
										33443,
										33453
									],
									[
										33570,
										33580
									],
									[
										33693,
										33703
									],
									[
										33848,
										33858
									],
									[
										33995,
										34005
									],
									[
										34135,
										34145
									],
									[
										34278,
										34288
									],
									[
										34414,
										34424
									],
									[
										34557,
										34567
									],
									[
										34654,
										34664
									],
									[
										34798,
										34808
									],
									[
										34958,
										34968
									],
									[
										35104,
										35114
									],
									[
										35256,
										35266
									],
									[
										35415,
										35425
									],
									[
										35532,
										35542
									],
									[
										35651,
										35661
									],
									[
										35807,
										35817
									],
									[
										35968,
										35978
									],
									[
										36104,
										36114
									],
									[
										36248,
										36258
									],
									[
										36350,
										36360
									],
									[
										36508,
										36518
									],
									[
										36678,
										36688
									],
									[
										36852,
										36862
									],
									[
										36996,
										37006
									],
									[
										37142,
										37152
									],
									[
										37288,
										37298
									],
									[
										37443,
										37453
									],
									[
										37542,
										37552
									],
									[
										37687,
										37697
									],
									[
										37849,
										37859
									],
									[
										37942,
										37952
									],
									[
										38093,
										38103
									],
									[
										38251,
										38261
									],
									[
										38423,
										38433
									],
									[
										38537,
										38547
									],
									[
										38689,
										38699
									],
									[
										38845,
										38855
									],
									[
										38983,
										38993
									],
									[
										39124,
										39134
									],
									[
										39217,
										39227
									],
									[
										39362,
										39372
									],
									[
										39519,
										39529
									],
									[
										39641,
										39651
									],
									[
										39785,
										39795
									],
									[
										39936,
										39946
									],
									[
										40091,
										40101
									],
									[
										40256,
										40266
									],
									[
										40378,
										40388
									],
									[
										40525,
										40535
									],
									[
										40637,
										40647
									],
									[
										40777,
										40787
									],
									[
										40921,
										40931
									],
									[
										41015,
										41025
									],
									[
										41109,
										41119
									],
									[
										41203,
										41213
									],
									[
										41297,
										41307
									],
									[
										41391,
										41401
									],
									[
										41485,
										41495
									],
									[
										41628,
										41638
									],
									[
										41777,
										41787
									],
									[
										41952,
										41962
									],
									[
										42008,
										42018
									],
									[
										42060,
										42070
									],
									[
										42115,
										42125
									],
									[
										42166,
										42176
									],
									[
										42217,
										42227
									],
									[
										42298,
										42308
									],
									[
										42354,
										42364
									],
									[
										42405,
										42415
									],
									[
										42461,
										42471
									],
									[
										42517,
										42527
									],
									[
										42568,
										42578
									],
									[
										42622,
										42632
									],
									[
										42673,
										42683
									],
									[
										42724,
										42734
									],
									[
										42775,
										42785
									],
									[
										42833,
										42843
									],
									[
										42886,
										42896
									],
									[
										42936,
										42946
									],
									[
										42996,
										43006
									],
									[
										43051,
										43061
									],
									[
										43109,
										43119
									],
									[
										43166,
										43176
									],
									[
										43218,
										43228
									],
									[
										43274,
										43284
									],
									[
										43337,
										43347
									],
									[
										43392,
										43402
									],
									[
										43453,
										43463
									],
									[
										43518,
										43528
									],
									[
										43581,
										43591
									],
									[
										43638,
										43648
									],
									[
										43689,
										43699
									],
									[
										43744,
										43754
									],
									[
										43795,
										43805
									],
									[
										43859,
										43869
									],
									[
										43934,
										43944
									],
									[
										43999,
										44009
									],
									[
										44061,
										44071
									],
									[
										44124,
										44134
									],
									[
										44180,
										44190
									],
									[
										44233,
										44243
									],
									[
										44297,
										44307
									],
									[
										44354,
										44364
									],
									[
										44403,
										44413
									],
									[
										44457,
										44467
									],
									[
										44526,
										44536
									],
									[
										44586,
										44596
									],
									[
										44648,
										44658
									],
									[
										44703,
										44713
									],
									[
										44760,
										44770
									],
									[
										44820,
										44830
									],
									[
										44881,
										44891
									],
									[
										44944,
										44954
									],
									[
										45003,
										45013
									],
									[
										45062,
										45072
									],
									[
										45124,
										45134
									],
									[
										45179,
										45189
									],
									[
										45234,
										45244
									],
									[
										45286,
										45296
									],
									[
										45339,
										45349
									],
									[
										45392,
										45402
									],
									[
										45448,
										45458
									],
									[
										45498,
										45508
									],
									[
										45547,
										45557
									],
									[
										45596,
										45606
									],
									[
										45650,
										45660
									],
									[
										45712,
										45722
									],
									[
										45771,
										45781
									],
									[
										45842,
										45852
									],
									[
										45900,
										45910
									],
									[
										45956,
										45966
									],
									[
										46017,
										46027
									],
									[
										46074,
										46084
									],
									[
										46130,
										46140
									],
									[
										46222,
										46232
									],
									[
										46310,
										46320
									],
									[
										46401,
										46411
									],
									[
										46456,
										46466
									],
									[
										46504,
										46514
									],
									[
										46559,
										46569
									],
									[
										46612,
										46622
									],
									[
										46661,
										46671
									],
									[
										46712,
										46722
									],
									[
										46794,
										46804
									],
									[
										46878,
										46888
									],
									[
										46970,
										46980
									],
									[
										47026,
										47036
									],
									[
										47084,
										47094
									],
									[
										47143,
										47153
									],
									[
										47199,
										47209
									],
									[
										47252,
										47262
									],
									[
										47307,
										47317
									],
									[
										47357,
										47367
									],
									[
										47406,
										47416
									],
									[
										47461,
										47471
									],
									[
										47518,
										47528
									],
									[
										47568,
										47578
									],
									[
										47621,
										47631
									],
									[
										47670,
										47680
									],
									[
										47720,
										47730
									],
									[
										47769,
										47779
									],
									[
										47822,
										47832
									],
									[
										47874,
										47884
									],
									[
										47930,
										47940
									],
									[
										47980,
										47990
									],
									[
										48030,
										48040
									],
									[
										48080,
										48090
									],
									[
										48130,
										48140
									],
									[
										48180,
										48190
									],
									[
										48230,
										48240
									],
									[
										48397,
										48407
									],
									[
										48545,
										48555
									],
									[
										48773,
										48783
									],
									[
										49140,
										49150
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								49174,
								49174
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 23842.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/array.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4075,
						"regions":
						{
						},
						"selection":
						[
							[
								4075,
								4075
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2188.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 9,
					"file": "src/campaign.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21970,
						"regions":
						{
						},
						"selection":
						[
							[
								20472,
								20472
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7084.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/meta_print.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85856,
						"regions":
						{
						},
						"selection":
						[
							[
								6135,
								6135
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3431.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/battle.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56134,
						"regions":
						{
						},
						"selection":
						[
							[
								15409,
								15413
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5439.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/array.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4075,
						"regions":
						{
						},
						"selection":
						[
							[
								3192,
								3192
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1744.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/meta.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39090,
						"regions":
						{
						},
						"selection":
						[
							[
								36656,
								36656
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11726.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "src/table.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1918,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/macros.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 775,
						"regions":
						{
						},
						"selection":
						[
							[
								180,
								162
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "data/ability.dat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2161,
						"regions":
						{
						},
						"selection":
						[
							[
								320,
								320
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/battle.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1810,
						"regions":
						{
						},
						"selection":
						[
							[
								658,
								658
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 210.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src/table.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3632,
						"regions":
						{
						},
						"selection":
						[
							[
								870,
								870
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 259.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/array.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2444,
						"regions":
						{
						},
						"selection":
						[
							[
								1047,
								1047
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src/unit.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22295,
						"regions":
						{
						},
						"selection":
						[
							[
								22095,
								22095
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10035.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.4375,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 213.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/buildbat.sublime-build",
	"project": "color-c.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"battle",
				"src\\battle.h"
			],
			[
				"array",
				"src\\array.h"
			],
			[
				"log",
				"logs\\log.txt"
			],
			[
				"memor",
				"src\\memory.cpp"
			],
			[
				"batt",
				"src\\battle.cpp"
			],
			[
				"Battle",
				"src\\battle.h"
			],
			[
				"bb",
				"build\\b.bat"
			],
			[
				"metaprint",
				"src\\meta_print.cpp"
			],
			[
				"table",
				"src\\table.h"
			],
			[
				"macro",
				"src\\macros.h"
			],
			[
				"meta",
				"src\\meta.cpp"
			],
			[
				"metapr",
				"src\\meta_print.cpp"
			],
			[
				"batteh",
				"src\\battle.h"
			],
			[
				"bat",
				"src\\battle.cpp"
			],
			[
				"abili",
				"data\\ability.dat"
			],
			[
				"breed",
				"data\\breed.dat"
			],
			[
				"unith",
				"src\\unit.h"
			],
			[
				"unit",
				"src\\unit.cpp"
			],
			[
				"memorydraw",
				"src\\memory_draw.cpp"
			],
			[
				"mem",
				"src\\memory.cpp"
			],
			[
				"camp",
				"src\\campaign.cpp"
			],
			[
				"const",
				"src\\const.h"
			],
			[
				"text",
				"src\\text_render.cpp"
			],
			[
				"frame",
				"src\\frametimes_draw.cpp"
			],
			[
				"option",
				"src\\options_menu.cpp"
			],
			[
				"main",
				"src\\main_menu.cpp"
			],
			[
				"img",
				"src\\imgui.cpp"
			],
			[
				"crit",
				"logs\\critical.log"
			],
			[
				"logt",
				"logs\\log.txt"
			],
			[
				"_draw",
				"src\\frametimes_draw.cpp"
			],
			[
				"memr",
				"src\\memory.h"
			],
			[
				"frametime",
				"src\\frametimes_draw.cpp"
			],
			[
				"glo",
				"src\\global.h"
			],
			[
				"include",
				"src\\game_code_include.cpp"
			],
			[
				"win32",
				"src\\win32_platform.cpp"
			],
			[
				"gameh",
				"src\\game.h"
			],
			[
				"imgui",
				"src\\imgui.cpp"
			],
			[
				"globa",
				"src\\global.h"
			],
			[
				"gamec",
				"src\\game.cpp"
			],
			[
				"plat",
				"src\\platform_include.cpp"
			],
			[
				"textre",
				"src\\text_render.cpp"
			],
			[
				"inc",
				"src\\game_code_include.cpp"
			],
			[
				"camera",
				"src\\camera.cpp"
			],
			[
				"con",
				"src\\const.h"
			],
			[
				"draw",
				"src\\draw.cpp"
			],
			[
				"inputc",
				"src\\input.cpp"
			],
			[
				"input",
				"src\\input.cpp"
			],
			[
				"todo",
				"_\\todo.txt"
			],
			[
				"inclu",
				"src\\game_code_include.cpp"
			],
			[
				"dbeugover",
				"src\\debug_overlay.h"
			],
			[
				"vec",
				"src\\vec.cpp"
			],
			[
				"util",
				"src\\util.cpp"
			],
			[
				"buffer",
				"src\\ring_buffer.cpp"
			],
			[
				"win",
				"src\\win32_platform.cpp"
			],
			[
				"mat",
				"src\\math.cpp"
			],
			[
				"tabl",
				"src\\table.cpp"
			],
			[
				"bree",
				"data\\breed.dat"
			],
			[
				"gamesta",
				"src\\game_state.h"
			],
			[
				"game",
				"src\\game.cpp"
			],
			[
				"room",
				"src\\room.h"
			],
			[
				"nodegra",
				"src\\node_graph.cpp"
			],
			[
				"textrend",
				"src\\text_render.cpp"
			],
			[
				"debugover",
				"src\\debug_overlay.h"
			],
			[
				"workque",
				"src\\win32_work_queue.h"
			],
			[
				"tod",
				"_\\todo.txt"
			],
			[
				"pool",
				"src\\pool.cpp"
			],
			[
				"imguih",
				"src\\imgui.h"
			],
			[
				"iguih",
				"src\\imgui.h"
			],
			[
				"node",
				"src\\node_graph.cpp"
			],
			[
				"memoryd",
				"src\\memory_draw.cpp"
			],
			[
				"win32work",
				"src\\win32_work_queue.cpp"
			],
			[
				"worke",
				"src\\work_entry.h"
			],
			[
				"enemyai",
				"src\\enemy_ai.cpp"
			],
			[
				"utf32",
				"src\\utf32string.cpp"
			],
			[
				"string",
				"src\\string.cpp"
			],
			[
				"edit",
				"src\\editor.cpp"
			],
			[
				"textpars",
				"src\\text_parsing.cpp"
			],
			[
				"textpar",
				"src\\text_parsing.h"
			],
			[
				"strinh",
				"src\\string.h"
			],
			[
				"memry",
				"src\\memory.cpp"
			],
			[
				"lo",
				"logs\\log.txt"
			],
			[
				"memorydarw",
				"src\\memory_draw.cpp"
			],
			[
				"work",
				"src\\work_entry.h"
			],
			[
				"workqu",
				"src\\win32_work_queue.h"
			],
			[
				"win32w",
				"src\\win32_work_queue.cpp"
			],
			[
				"b",
				"build\\b.bat"
			],
			[
				"tableh",
				"src\\table.h"
			],
			[
				"gam",
				"src\\game.cpp"
			],
			[
				"tab",
				"src\\table.cpp"
			],
			[
				"lot",
				"logs\\log.txt"
			],
			[
				"arra",
				"src\\array.cpp"
			],
			[
				"timin",
				"logs\\DebugTimings.txt"
			],
			[
				"cam",
				"src\\campaign.cpp"
			],
			[
				"utf",
				"src\\utf32string.cpp"
			],
			[
				"str",
				"src\\string.cpp"
			],
			[
				"ene",
				"src\\enemy_ai.cpp"
			],
			[
				"better",
				"src\\better_text_parsing.cpp"
			],
			[
				"memory",
				"src\\memory.cpp"
			],
			[
				"memo",
				"src\\memory.h"
			],
			[
				"ndo",
				"src\\node_graph.cpp"
			],
			[
				"ga",
				"src\\game.cpp"
			],
			[
				"outline",
				"src\\shader\\outline.cs.glsl"
			],
			[
				"cnost",
				"src\\const.h"
			],
			[
				"drawh",
				"src\\draw.h"
			],
			[
				"opengl",
				"src\\opengl.h"
			],
			[
				"open",
				"src\\opengl.cpp"
			],
			[
				"blur",
				"src\\shader\\gaussian_blur.cs.glsl"
			],
			[
				"openglh",
				"src\\opengl.h"
			],
			[
				"color",
				"src\\color_vertex.glsl"
			],
			[
				"uv",
				"src\\uv_fragment.glsl"
			],
			[
				"win32_work",
				"src\\win32_work_queue.cpp"
			],
			[
				"logcp",
				"src\\log.cpp"
			],
			[
				"ogc",
				"build\\freetype-2.9.1\\builds\\os2\\os2-gcc.mk"
			],
			[
				"uv_fra",
				"src\\uv_fragment.glsl"
			],
			[
				"uv_ver",
				"src\\uv_vertex.glsl"
			],
			[
				"vertex",
				"src\\color_vertex.glsl"
			],
			[
				"gauss",
				"src\\shader\\gaussian_blur.vs.glsl"
			],
			[
				"guas",
				"src\\shader\\gaussian_blur.vs.glsl"
			],
			[
				"color_fra",
				"src\\color_fragment.glsl"
			],
			[
				"openg",
				"src\\opengl.cpp"
			],
			[
				"test",
				"src\\test_mode.cpp"
			],
			[
				"textren",
				"src\\text_render.h"
			],
			[
				"ai",
				"src\\enemy_ai.cpp"
			],
			[
				"ability",
				"data\\ability.dat"
			],
			[
				"abi",
				"src\\ability.cpp"
			],
			[
				"abilityh",
				"src\\ability.h"
			],
			[
				"stringh",
				"src\\string.h"
			],
			[
				"onst",
				"src\\const.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 198.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
