{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"abilityicon",
				"ability_icon_button_layout"
			],
			[
				"Aci",
				"ActivateColorShader"
			],
			[
				"Active",
				"ActivateColorShader"
			],
			[
				"current",
				"current_state"
			],
			[
				"cur_pot",
				"cur_potential"
			],
			[
				"enemy",
				"enemy_traitset_changes"
			],
			[
				"best_",
				"best_score"
			],
			[
				"pote",
				"ability_potential"
			],
			[
				"abs",
				"abs_change"
			],
			[
				"rel",
				"rel_change"
			],
			[
				"best",
				"best_score"
			],
			[
				"abilit_",
				"ability_id"
			],
			[
				"tier_pote",
				"tier_potentials"
			],
			[
				"next_",
				"next_tier_index"
			],
			[
				"requir",
				"required_traits"
			],
			[
				"cur_tier",
				"cur_tier_reqs"
			],
			[
				"cur_",
				"cur_tier_index"
			],
			[
				"armor",
				"armor_score"
			],
			[
				"focus",
				"focus_score"
			],
			[
				"aro",
				"armor_range"
			],
			[
				"Alloc",
				"AllocateAndGenerateAbilityTierPotentials"
			],
			[
				"upgrade",
				"upgrade_potential"
			],
			[
				"down",
				"downgrade_points"
			],
			[
				"prev_",
				"prev_tier_potential"
			],
			[
				"upgade",
				"upgrade_ratio"
			],
			[
				"total",
				"total_points"
			],
			[
				"next",
				"next_tier"
			],
			[
				"upgrad",
				"upgrade_points"
			],
			[
				"cur_pote",
				"cur_tier_potential"
			],
			[
				"cur",
				"cur_tier_potential"
			],
			[
				"ability",
				"ability_count"
			],
			[
				"potent",
				"potential_before_change"
			],
			[
				"potential_e",
				"potential_after_change"
			],
			[
				"ally_",
				"ally_units"
			],
			[
				"ally_trait",
				"ally_traitset_changes"
			],
			[
				"Valid",
				"ValidAbility"
			],
			[
				"init",
				"initial_enemy_traitsets"
			],
			[
				"random",
				"random_index"
			],
			[
				"breed",
				"breed_table"
			],
			[
				"initia",
				"initial_ally_traitsets"
			],
			[
				"enemytraitset",
				"enemy_traitset_changes"
			],
			[
				"enemy_trait",
				"enemy_traitset_changes"
			],
			[
				"traitset",
				"traitset_changes"
			],
			[
				"trait",
				"traitset_changes"
			],
			[
				"ally_tr",
				"ally_traitset_changes"
			],
			[
				"enemyrtai",
				"enemy_traitset_changes"
			],
			[
				"allytrait",
				"ally_traitset_changes"
			],
			[
				"win32_time",
				"win32_TimeElapsedMs"
			],
			[
				"permutat",
				"permutation_count"
			],
			[
				"Create",
				"CreateUnitByName"
			],
			[
				"unit_",
				"unit_indices"
			],
			[
				"equi",
				"equivalent_line_count"
			],
			[
				"unit_ind",
				"unit_indices_index"
			],
			[
				"length",
				"length_of_one_permutation"
			],
			[
				"permut",
				"permutation_start"
			],
			[
				"permu",
				"permutation_start"
			],
			[
				"lent",
				"length_of_one_permutation"
			],
			[
				"active",
				"active_unitset"
			],
			[
				"cur_trait",
				"current_traitsets"
			],
			[
				"max",
				"max_party_size"
			],
			[
				"triat",
				"trait_changes"
			],
			[
				"curre",
				"current_traitsets"
			],
			[
				"target",
				"target_index"
			],
			[
				"cur_tra",
				"current_traitsets"
			],
			[
				"Determine",
				"DetermineAbilityTier"
			],
			[
				"targetc",
				"target_count"
			],
			[
				"all_",
				"all_units_are_valid"
			],
			[
				"unitset",
				"other_unitset"
			],
			[
				"Temp",
				"CreateTempArray"
			],
			[
				"sub_",
				"sub_array3"
			],
			[
				"sub",
				"sub_array2"
			],
			[
				"permutation_",
				"permutation_length"
			],
			[
				"permuta",
				"permutation_length"
			],
			[
				"product",
				"product_of_options"
			],
			[
				"produ",
				"product_of_options"
			],
			[
				"sub_ar",
				"sub_array1"
			],
			[
				"size_",
				"size_of_dst"
			],
			[
				"permutation",
				"permutation_index"
			],
			[
				"numer",
				"number_of_sub_permutations"
			],
			[
				"value",
				"value_count"
			],
			[
				"perm",
				"perm1"
			],
			[
				"Generate",
				"GenerateU8Permutations"
			],
			[
				"number",
				"number_of_sub_arrays"
			],
			[
				"perumtation",
				"permutation_values"
			],
			[
				"other",
				"other_unitset"
			],
			[
				"prem",
				"permutation_count"
			],
			[
				"option",
				"option_count_for_this_unit"
			],
			[
				"team_",
				"team_counts"
			],
			[
				"size",
				"size_t"
			],
			[
				"null",
				"null_ability_id"
			],
			[
				"selected",
				"selected_ability_id"
			],
			[
				"event_tar",
				"event_target_unit"
			],
			[
				"unit_slot",
				"unit_slot_size"
			],
			[
				"dead",
				"dead_text_layout"
			],
			[
				"Inferred",
				"GenerateInferredUnitSet"
			],
			[
				"target_ind",
				"target_indication_layout"
			],
			[
				"zoom",
				"zoom_sensitivity"
			],
			[
				"Set",
				"SetCameraView"
			],
			[
				"alig",
				"aligned_rect"
			],
			[
				"start",
				"start_node_pos"
			],
			[
				"hovered",
				"hovered_node_index"
			],
			[
				"complet",
				"completed_node_index"
			],
			[
				"thread",
				"thread_arena"
			],
			[
				"cam",
				"campaign"
			],
			[
				"NodeGra",
				"NodeGraphResponse"
			],
			[
				"set",
				"SetCameraView"
			],
			[
				"camer_start",
				"camera_start_pos"
			],
			[
				"SetCamera",
				"SetCameraView"
			],
			[
				"screnept",
				"screen_pt"
			],
			[
				"camera",
				"camera_view"
			],
			[
				"camer",
				"camera_view"
			],
			[
				"Rect",
				"RectAspectRatio"
			],
			[
				"SetCamr",
				"SetCameraPos"
			],
			[
				"Pr",
				"ProgramUniform1f"
			],
			[
				"graph",
				"graph_response"
			],
			[
				"map_",
				"map_padding"
			],
			[
				"SetC",
				"SetCameraPos"
			],
			[
				"maps",
				"maps"
			],
			[
				"Node",
				"NodeGraph"
			],
			[
				"cent",
				"center_of_screen_in_world_space"
			],
			[
				"tran",
				"transformed_pos"
			],
			[
				"Cmpaign",
				"CampaignState"
			],
			[
				"Map",
				"MapSelection"
			],
			[
				"Campa",
				"CampaignState"
			],
			[
				"Camp",
				"CampaignState"
			],
			[
				"def",
				"def_text_layout"
			],
			[
				"inita",
				"initial_cam_zoom"
			],
			[
				"initla",
				"initial_cam_pos"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/battle.cpp",
			"settings":
			{
				"buffer_size": 50374,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/draw.cpp",
			"settings":
			{
				"buffer_size": 7913,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/const.h",
			"settings":
			{
				"buffer_size": 15020,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/imgui.h",
			"settings":
			{
				"buffer_size": 1864,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/vec.cpp",
			"settings":
			{
				"buffer_size": 7851,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"inc",
				"Increment Selection"
			],
			[
				"incre",
				"Increment Selection"
			],
			[
				"INCRE",
				"Increment Selection"
			],
			[
				"lower ",
				"Convert Case: Lower Case"
			],
			[
				"Incre",
				"Increment Selection"
			],
			[
				"increm",
				"Increment Selection"
			],
			[
				"increment",
				"Increment Selection"
			],
			[
				"build",
				"Build With: buildbat"
			],
			[
				"open",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"ortho",
				"Project: Refresh Folders"
			],
			[
				"util",
				"Permute Lines: Reverse"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"selec",
				"SelectiveUppercase: Uppercase selection words"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Inc",
				"Indentation: Convert to Spaces"
			],
			[
				"increme",
				"Increment Selection"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"project",
				"Project: Add Folder"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"syntax",
				"Preferences: Settings â€“ Syntax Specific"
			],
			[
				"buildv",
				"Disable/Enable buildview for this window"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"toggle menu",
				"View: Toggle Menu"
			],
			[
				"menu",
				"View: Toggle Menu"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 238.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/color-c"
	],
	"file_history":
	[
		"/C/color-c/src/test_mode.cpp",
		"/C/color-c/src/ai_explorer.cpp",
		"/C/color-c/src/const.h",
		"/C/color-c/src/game.cpp",
		"/C/color-c/src/geometry.cpp",
		"/C/color-c/src/draw.h",
		"/C/color-c/logs/log.txt",
		"/C/color-c/src/geometry.h",
		"/C/color-c/src/platform_include.cpp",
		"/C/color-c/src/game_code_include.cpp",
		"/C/color-c/src/vec.cpp",
		"/C/color-c/build/b.bat",
		"/C/color-c/src/test_mode.h",
		"/C/color-c/src/array.cpp",
		"/C/color-c/src/array.h",
		"/C/color-c/src/color_vertex.glsl",
		"/C/color-c/src/draw.cpp",
		"/C/color-c/src/string.h",
		"/C/color-c/src/math.cpp",
		"/C/color-c/src/string.cpp",
		"/C/color-c/src/main_menu.cpp",
		"/C/color-c/src/ai_explorer.h",
		"/C/color-c/src/game.h",
		"/C/color-c/src/battle.cpp",
		"/C/color-c/src/enemy_ai.cpp",
		"/C/color-c/_/todo.txt",
		"/C/color-c/src/game_state.h",
		"/C/color-c/src/enemy_ai.h",
		"/C/color-c/data/breed.dat",
		"/C/color-c/data/ability.dat",
		"/C/color-c/src/ability.cpp",
		"/C/color-c/src/main_menu.h",
		"/C/color-c/src/traitset.cpp",
		"/C/color-c/src/ability.h",
		"/C/color-c/src/traitset.h",
		"/C/color-c/logs/DebugTimings.txt",
		"/C/color-c/src/unit.h",
		"/C/color-c/src/effect.cpp",
		"/C/color-c/src/effect.h",
		"/C/color-c/src/target_class.h",
		"/C/color-c/src/target_class.cpp",
		"/C/color-c/src/table.cpp",
		"/C/color-c/src/unit.cpp",
		"/C/color-c/src/macros.h",
		"/C/color-c/src/random.cpp",
		"/C/color-c/src/table.h",
		"/C/color-c/logs/critical.log",
		"/C/color-c/src/win32_platform.cpp",
		"/C/color-c/src/platform.h",
		"/C/color-c/src/battle.h",
		"/C/color-c/src/scratch.cpp",
		"/C/color-c/src/permutation.cpp",
		"/C/color-c/src/log.cpp",
		"/C/color-c/src/memory.cpp",
		"/C/color-c/src/win32_work_queue.cpp",
		"/C/color-c/src/win32_work_queue.h",
		"/C/color-c/src/work_entry.h",
		"/C/color-c/src/permutation.h",
		"/C/color-c/src/fixed_array.h",
		"/C/color-c/src/meta.cpp",
		"/C/color-c/src/memory.h",
		"/C/color-c/src/room.h",
		"/C/color-c/src/map.cpp",
		"/C/color-c/src/uv_vertex.glsl",
		"/C/color-c/src/text_render.h",
		"/C/color-c/src/font_loading.cpp",
		"/C/color-c/build/game.i",
		"/C/color-c/src/input.h",
		"/C/color-c/src/campaign.cpp",
		"/C/color-c/src/node_graph.h",
		"/C/color-c/src/text_render.cpp",
		"/C/color-c/src/campaign.h",
		"/C/color-c/src/imgui.h",
		"/C/color-c/src/map.h",
		"/C/color-c/src/room.cpp",
		"/C/color-c/src/node_graph.cpp",
		"/C/color-c/src/util.cpp",
		"/C/color-c/src/math.h",
		"/C/color-c/src/timer.cpp",
		"/C/color-c/src/camera.cpp",
		"/C/color-c/src/oscillating_timer.cpp",
		"/C/color-c/src/oscillating_timer.h",
		"/C/color-c/src/input.cpp",
		"/C/color-c/src/camera.h",
		"/C/color-c/src/debug.cpp",
		"/C/color-c/src/uv_fragment.glsl",
		"/C/color-c/src/color_fragment.glsl",
		"/C/color-c/build/freetype-2.9.1/docs/reference/ft2-header_file_macros.html",
		"/C/color-c/src/vec.h",
		"/C/color-c/src/win32_platform.h",
		"/C/color-c/src/opengl.cpp",
		"/C/color-c/src/timer.h",
		"/C/color-c/src/align.cpp",
		"/C/color-c/.gitignore",
		"/C/color-c/src/ring_buffer.h",
		"/C/color-c/src/generate_node_graph_params.h",
		"/C/color-c/src/editor.h",
		"/C/color-c/src/text_parsing.cpp",
		"/C/color-c/src/log.h",
		"/C/color-c/src/better_text_parsing.cpp",
		"/C/color-c/src/text_parsing.h",
		"/C/color-c/src/buffer.h",
		"/C/color-c/src/buffer.cpp",
		"/C/color-c/src/font_loading.h",
		"/C/color-c/src/freetype_wrapper.cpp",
		"/C/color-c/src/bitmap.cpp",
		"/C/color-c/src/bitmap.h",
		"/C/color-c/src/util.h",
		"/C/Users/Harm/AppData/Roaming/Sublime Text 3/Packages/User/buildbat.sublime-build",
		"/C/color-c/logs/log2.txt",
		"/D/work/programming/color-c/src/log.cpp",
		"/D/work/programming/color-c/logs/log.txt",
		"/D/work/programming/color-c/TEST.txt",
		"/D/work/programming/color-c/src/log.h",
		"/D/work/programming/color-c/src/platform.h",
		"/D/work/programming/color-c/logs/log2.txt",
		"/D/work/programming/color-c/src/ring_buffer.cpp",
		"/D/work/programming/color-c/src/ring_buffer.h",
		"/D/work/programming/color-c/src/macros.h",
		"/D/work/programming/color-c/src/campaign.cpp",
		"/D/work/programming/color-c/src/game.h",
		"/D/work/programming/color-c/src/work_entry.h",
		"/D/work/programming/color-c/src/memory.h",
		"/D/work/programming/color-c/build/win32_platform.i",
		"/D/work/programming/color-c/build/b.bat",
		"/D/work/programming/color-c/src/array.cpp",
		"/D/work/programming/color-c/src/node_graph.cpp",
		"/D/work/programming/color-c/src/game.cpp"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 164.0,
		"where_history":
		[
			"C:\\color-c\\src, -*.i",
			"D:\\work\\programming\\color-c\\src, -*.i",
			"D:\\work\\programming\\color-c\\src",
			"D:\\work\\programming\\color-c\\src\\[^\\]*.cpp",
			"D:\\work\\programming\\color-c\\src\\*.cpp, D:\\work\\programming\\color-c\\src\\*.h",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\src\\freetype",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\src\\freetype\\*",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\src\\freetype",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\freetype\\*",
			"D:\\work\\programming\\color-c\\src, -D:\\work\\programming\\color-c\\freetype",
			"D:\\work\\programming\\color-c\\src, -\\freetype\\",
			"D:\\work\\programming\\color-c\\src, -*\\freetype\\",
			"D:\\work\\programming\\color-c\\src, -freetype\\*",
			"D:\\work\\programming\\color-c\\src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"align_topleft",
			"align_left",
			"hover_ui_draw_depth",
			"caster",
			"end_turn_button_rect",
			"DoAi",
			"DrawDirectedLine2",
			"DrawLine",
			"state =",
			"viud",
			"UnitAbilityPotential",
			"armor",
			"thought",
			"DrawAbilityInfo",
			"CalculateAbilityPotentialWithCurrentTraits",
			"vigor",
			"BattleScore",
			"2(",
			"best_score",
			"Score",
			"AbilityInfo",
			"total_option_count",
			"ScoreBattleState2",
			"DoAi",
			"ability.",
			"Score",
			"struct TraitSet",
			"TraitSet",
			"tiers +=",
			"vigor",
			".vigor",
			"current",
			"vigor",
			"DoAi",
			"cur_tier.",
			"ValidAbility",
			"break;",
			"CreatePermanentArray",
			"DetermineAbilityTier",
			"Assert(",
			"ScoreBattleState",
			"c::",
			"Log(\"",
			"tick",
			"best_permutation_index",
			"DoAi",
			"initial_trait",
			"ScoreBattleState",
			"traitset_changes",
			"ScoreBattleState",
			"current_traitsets",
			"ScoreBattleState",
			"DoAiStuff",
			"player_turn = true",
			"ally_traitsets",
			"Score",
			"target_count",
			"actions",
			"current_traitsets",
			"cur_traitsets",
			"cur_",
			"CalculateAdjustedDamage",
			"apply",
			"CalculateAdjustedDamage",
			"max",
			"= 8",
			"8",
			"max",
			"units",
			"Copy",
			"CombineUnitSet",
			"armor",
			"Apply",
			"armor",
			"InitLog",
			"Log(",
			"Log",
			"DoAiStuff",
			"FromPlatform",
			"dst",
			"enum class Team",
			"Team",
			"struct Team",
			"ValidTarget",
			"DetermineAbilityTier",
			"struct TraitSet",
			"struct UnitSet",
			"UnitSet",
			"thought",
			"GenerateBattlePreviewEvent",
			"Generate",
			"struct Event",
			"preview",
			"battle->intents_",
			"preview",
			"intents_",
			"action_points",
			"GenerateEnemyIntent",
			"struct UnitSet",
			"player_turn",
			"turn",
			"thought",
			"Enemy intent",
			"GenerateInferredTargetSet",
			"GenerateEnemyIntents",
			"breath",
			"DrawAbilityInfoBox",
			"Random",
			"U32.",
			"U32",
			"LoadFontData",
			"room",
			"graph->",
			"Log(",
			"zoom",
			"DrawNodeGraph",
			"Draw",
			"cam",
			"rect",
			"camera->",
			"game->camera_",
			"draw_debug_text",
			".x",
			"space",
			".x",
			"next_entry_to_read",
			"MoveCameraToWorldRect",
			"game->current_state"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"unit",
			"focus",
			"armor",
			"ability->",
			"armor",
			"focus",
			".focus",
			"end",
			"start",
			"focus",
			"armor",
			"focus",
			"",
			"ai::",
			"p",
			"battle->intents",
			"graph.",
			"vec",
			"camera.",
			"camera->",
			".y",
			"end",
			"rect",
			"queue",
			"/",
			"graph->",
			"b",
			"a",
			"graph",
			"b",
			"a",
			"graph",
			"params",
			".b",
			".a",
			"graph",
			", edge_percent, &t, &u",
			", edge_percent, &t, &t",
			"cam_move_speed",
			"fprintf(&",
			"in_file",
			"KeyBind keybind",
			"LineHeight",
			"tier.",
			"tc",
			"GetIndexFromName",
			"selected",
			"tc",
			"input",
			"ipnut",
			"UnitSet",
			"FromId",
			"ability_ids",
			"breed",
			"Breed",
			"",
			"Id",
			"FromId",
			"id",
			"AllocArena",
			"",
			"Table",
			"UnitSet",
			"(int)AbilityPropertyIndex",
			"].text.length",
			"editor->input_elements",
			"search_panel_layout",
			"TokenType_",
			"*p",
			"active_string->",
			"active_string",
			"#include \"utf32string.h\"",
			"char",
			"",
			"//log",
			"Utf32String",
			"Utf32FixedString",
			"arena->",
			"arena",
			"caster",
			"DamageIgnoreArmor",
			"ability->",
			"requires",
			"TokenMatchesString(token,",
			"-",
			"EffectParams_",
			">",
			"valid",
			"lcg->",
			"battle->",
			"layout.font->",
			"damage",
			"timer->max",
			"timer->min",
			"timer->speed",
			"battle->",
			"all_targets_clean",
			"target.",
			"c::max_battle",
			"char_size.y",
			"char_size.x",
			"font.face",
			"FAST_FUNCTION",
			"SLOW_FUNCTION",
			"OPTIMIZING_FUNCTION",
			"FASTSLOW_FUNCTION",
			"font->",
			"entry->",
			"Length(traitset_string)",
			", ",
			"fullscreen_",
			"align.y == AlignY",
			"trait_layout",
			"layout.face",
			"layout.font_size",
			"focus",
			"armor",
			"trait_text_size,",
			"focus",
			"armor",
			"game->selected_unit",
			"preview_font_size,",
			"unit->",
			"imgui::active_container",
			"",
			"else if(tc == TargetClass::",
			"imgui::button_padding",
			"imgui::active_container->"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/battle.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50374,
						"regions":
						{
						},
						"selection":
						[
							[
								45277,
								45277
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8742.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/draw.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7913,
						"regions":
						{
						},
						"selection":
						[
							[
								7687,
								7687
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3037.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "src/const.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15020,
						"regions":
						{
						},
						"selection":
						[
							[
								13121,
								13121
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5649.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/imgui.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1864,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								291
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 42.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/vec.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7851,
						"regions":
						{
						},
						"selection":
						[
							[
								7851,
								7851
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5186.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.539375,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 213.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/buildbat.sublime-build",
	"project": "color-c.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"vec",
				"src\\vec.cpp"
			],
			[
				"onst",
				"src\\const.h"
			],
			[
				"const",
				"src\\const.h"
			],
			[
				"batt",
				"src\\battle.cpp"
			],
			[
				"game",
				"src\\game.cpp"
			],
			[
				"log",
				"logs\\log.txt"
			],
			[
				"drawh",
				"src\\draw.h"
			],
			[
				"plaf",
				"src\\platform_include.cpp"
			],
			[
				"inc",
				"src\\game_code_include.cpp"
			],
			[
				"str",
				"src\\string.cpp"
			],
			[
				"geomr",
				"src\\geometry.cpp"
			],
			[
				"ai",
				"src\\ai_explorer.cpp"
			],
			[
				"math",
				"src\\math.cpp"
			],
			[
				"bb",
				"build\\b.bat"
			],
			[
				"color",
				"src\\color_vertex.glsl"
			],
			[
				"arrayc",
				"src\\array.cpp"
			],
			[
				"draw",
				"src\\draw.cpp"
			],
			[
				"test",
				"src\\test_mode.cpp"
			],
			[
				"main",
				"src\\main_menu.cpp"
			],
			[
				"bat",
				"src\\battle.cpp"
			],
			[
				"aiex",
				"src\\ai_explorer.h"
			],
			[
				"gameh",
				"src\\game.h"
			],
			[
				"game state",
				"src\\game_state.h"
			],
			[
				"tod",
				"_\\todo.txt"
			],
			[
				"gamec",
				"src\\game.cpp"
			],
			[
				"breed",
				"data\\breed.dat"
			],
			[
				"abilitd",
				"data\\ability.dat"
			],
			[
				"abilty",
				"data\\ability.dat"
			],
			[
				"enemyai",
				"src\\enemy_ai.h"
			],
			[
				"abilitydat",
				"data\\ability.dat"
			],
			[
				"abilt",
				"src\\ability.h"
			],
			[
				"abilityd",
				"data\\ability.dat"
			],
			[
				"abilityh",
				"src\\ability.h"
			],
			[
				"b",
				"build\\b.bat"
			],
			[
				"Traitset",
				"src\\traitset.h"
			],
			[
				"unit",
				"src\\unit.h"
			],
			[
				"todo",
				"_\\todo.txt"
			],
			[
				"timin",
				"logs\\DebugTimings.txt"
			],
			[
				"effect",
				"src\\effect.h"
			],
			[
				"abili",
				"src\\ability.cpp"
			],
			[
				"ab h",
				"src\\ability.h"
			],
			[
				"abi",
				"data\\ability.dat"
			],
			[
				"bre",
				"data\\breed.dat"
			],
			[
				"con",
				"src\\const.h"
			],
			[
				"bree",
				"data\\breed.dat"
			],
			[
				"macr",
				"src\\macros.h"
			],
			[
				"tragetclas",
				"src\\target_class.h"
			],
			[
				"ability",
				"src\\ability.h"
			],
			[
				"unith",
				"src\\unit.h"
			],
			[
				"abil",
				"data\\ability.dat"
			],
			[
				"abiltd",
				"data\\ability.dat"
			],
			[
				"crit",
				"logs\\critical.log"
			],
			[
				"table",
				"src\\table.cpp"
			],
			[
				"cri",
				"logs\\critical.log"
			],
			[
				"win32",
				"src\\win32_platform.cpp"
			],
			[
				"",
				"src\\win32_platform.cpp"
			],
			[
				"platfo",
				"src\\platform.h"
			],
			[
				"timing",
				"logs\\DebugTimings.txt"
			],
			[
				"ab",
				"data\\ability.dat"
			],
			[
				"ablih",
				"src\\ability.h"
			],
			[
				"scrat",
				"src\\scratch.cpp"
			],
			[
				"abiltyd",
				"data\\ability.dat"
			],
			[
				"array",
				"src\\array.cpp"
			],
			[
				"target",
				"src\\target_class.h"
			],
			[
				"win",
				"src\\win32_platform.cpp"
			],
			[
				"work",
				"src\\win32_work_queue.h"
			],
			[
				"string",
				"src\\string.h"
			],
			[
				"mem",
				"src\\memory.cpp"
			],
			[
				"include",
				"src\\game_code_include.cpp"
			],
			[
				"plat",
				"src\\platform.h"
			],
			[
				"meta",
				"src\\meta.cpp"
			],
			[
				"battl",
				"src\\battle.h"
			],
			[
				"abiltiyd",
				"data\\ability.dat"
			],
			[
				"battle",
				"src\\battle.h"
			],
			[
				"memory",
				"src\\memory.h"
			],
			[
				"battelh",
				"src\\battle.h"
			],
			[
				"unitc",
				"src\\unit.cpp"
			],
			[
				"breedd",
				"data\\breed.dat"
			],
			[
				"ablityd",
				"data\\ability.dat"
			],
			[
				"arra",
				"src\\array.h"
			],
			[
				"gamei",
				"build\\game.i"
			],
			[
				"node",
				"src\\node_graph.h"
			],
			[
				"room",
				"src\\room.h"
			],
			[
				"inputh",
				"src\\input.h"
			],
			[
				"font",
				"src\\font_loading.cpp"
			],
			[
				"text",
				"src\\text_render.cpp"
			],
			[
				"map",
				"src\\map.cpp"
			],
			[
				"textren",
				"src\\text_render.h"
			],
			[
				"imgui",
				"src\\imgui.h"
			],
			[
				"verte",
				"src\\uv_vertex.glsl"
			],
			[
				"cons",
				"src\\const.h"
			],
			[
				"util",
				"src\\util.cpp"
			],
			[
				"btat",
				"src\\battle.cpp"
			],
			[
				"timerc",
				"src\\timer.cpp"
			],
			[
				"timer",
				"src\\oscillating_timer.h"
			],
			[
				"camera",
				"src\\camera.h"
			],
			[
				"input",
				"src\\input.cpp"
			],
			[
				"nodegra",
				"src\\node_graph.cpp"
			],
			[
				"textre",
				"src\\text_render.cpp"
			],
			[
				"renderte",
				"build\\freetype-2.9.1\\docs\\reference\\ft2-header_file_macros.html"
			],
			[
				"uv_ver",
				"src\\uv_vertex.glsl"
			],
			[
				"uvfra",
				"src\\uv_fragment.glsl"
			],
			[
				"glsl",
				"src\\color_vertex.glsl"
			],
			[
				"workq",
				"src\\win32_work_queue.cpp"
			],
			[
				"drawc",
				"src\\draw.cpp"
			],
			[
				"gamc",
				"src\\game.cpp"
			],
			[
				"camp",
				"src\\campaign.h"
			],
			[
				"colorv",
				"src\\color_vertex.glsl"
			],
			[
				"uv",
				"src\\uv_fragment.glsl"
			],
			[
				"uvfr",
				"src\\uv_fragment.glsl"
			],
			[
				"openg",
				"src\\opengl.cpp"
			],
			[
				"logt",
				"logs\\log.txt"
			],
			[
				"color_fra",
				"src\\color_fragment.glsl"
			],
			[
				"colorver",
				"src\\color_vertex.glsl"
			],
			[
				"paltf",
				"src\\platform.h"
			],
			[
				"arrayh",
				"src\\array.h"
			],
			[
				"critic",
				"logs\\critical.log"
			],
			[
				"edit",
				"src\\editor.h"
			],
			[
				"workentr",
				"src\\work_entry.h"
			],
			[
				"inclu",
				"src\\game_code_include.cpp"
			],
			[
				"textpars",
				"src\\text_parsing.cpp"
			],
			[
				"effec",
				"src\\effect.h"
			],
			[
				"targetcl",
				"src\\target_class.h"
			],
			[
				"textpar",
				"src\\text_parsing.cpp"
			],
			[
				"inputc",
				"src\\input.cpp"
			],
			[
				"bitm",
				"src\\bitmap.h"
			],
			[
				"metac",
				"src\\meta.cpp"
			],
			[
				"log2",
				"logs\\log2.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 198.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
