//27) Should our struct Array<Type> store an (Arena *) or an Id<Arena>? I think storing a raw pointer is OK here, since we don't expect to be doing much fiddling with the arena of an array in userspace code, and adding the overhead of a table lookup (although it is rather small, something like 200 cycles last time I checked) every time we need to resize the array (which, admittedly probably won't be happening too much with the way the game is currently structured) may not be what we want -- we need to look at the (dis)advantages of having that slight bit of extra safety and see if it's relevant for this game. AOWTC, it is a raw pointer, and I can't think of any IMMEDIATE issues this will cause. [I decided to use an Id<Arena>, because I didn't want to have to have overloads for everything that
arrays might use -- this did cause some clear overhead (frametime increased visibly -- only by about 0.1ms or so -- but it's impossible to tell if that was a multiplicative increase or an absolute increase -- if it's an absolute increase, it's probably not a big deal, but if it's a multiplicative increase that could become an issue in the future as frametimes get longer. I think it's unlikely that it's a multiplicative increase, but we should keep this thing in mind for the future when we're looking for performance tweaks)]